; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31933.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	?__LINE__Var@?0??__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z@4JA ; `std::vector<float,std::allocator<float> >::__autoclassinit2'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4JA ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@2@@Z@4JA ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$allocator@M@std@@QEAA@XZ@4JA ; `std::allocator<float>::allocator<float>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@3@XZ@4JA ; `std::vector<float,std::allocator<float> >::_Getal'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ@4JA ; `std::vector<float,std::allocator<float> >::_Tidy'::`1'::__LINE__Var
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	?__LINE__Var@?0??_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@3@XZ@4JA ; `std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z@4JA ; `std::allocator<float>::deallocate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@2@@Z@4JA ; `std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@2@AEBV?$allocator@M@2@@Z@4JA ; `std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><std::allocator<float> const &>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA ; `std::vector<float,std::allocator<float> >::_Construct_n<>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@1@@Z@4JA ; `std::_Destroy_range<std::allocator<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4JA ; `std::_Tidy_guard<std::vector<float,std::allocator<float> > >::~_Tidy_guard<std::vector<float,std::allocator<float> > >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4JA ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA ; `std::vector<float,std::allocator<float> >::_Buy_nonzero'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	?__LINE__Var@?0??_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ@4JA ; `std::vector<float,std::allocator<float> >::_Xlength'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA ; `std::vector<float,std::allocator<float> >::_Buy_raw'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ@4JA ; `std::vector<float,std::allocator<float> >::max_size'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@3@XZ@4JA ; `std::vector<float,std::allocator<float> >::_Getal'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@3@@Z@4JA ; `std::_Default_allocator_traits<std::allocator<float> >::max_size'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??allocate@?$allocator@M@std@@QEAAPEAM_K@Z@4JA ; `std::allocator<float>::allocate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@3@XZ@4JA ; `std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@1@AEBV21@@Z@4JA ; `std::forward<std::allocator<float> const &>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@1@@Z@4JA ; `std::_Uninitialized_value_construct_n<std::allocator<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Get_size_of_n@$03@std@@YA_K_K@Z@4JA ; `std::_Get_size_of_n<4>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX_K@Z@4JA ; `std::_Uninitialized_backout_al<std::allocator<float> >::__autoclassinit2'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ@4JA ; `std::_Uninitialized_backout_al<std::allocator<float> >::_Release'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ@4JA ; `std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@2@@Z@4JA ; `std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Unfancy@M@std@@YAPEAMPEAM@Z@4JA ; `std::_Unfancy<float>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z@4JA ; `std::_Zero_range<float *>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z@4JA ; `std::_To_address<float *>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ@4JA ; `std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@2@QEAM@Z@4JA ; `std::_Default_allocator_traits<std::allocator<float> >::construct<float>'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0???$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z@4JA ; `std::_Voidify_iter<float *>'::`1'::__LINE__Var
msvcjmc	SEGMENT
__CD417A16_concurrencysal@h DB 01H
__18C11F8D_sal@h DB 01H
__BD42D05E_vadefs@h DB 01H
__2DC9DF70_vcruntime@h DB 01H
__C9149A6D_xkeycheck@h DB 01H
__94F3B4AE_yvals_core@h DB 01H
__7B399007_limits@h DB 01H
__1AB9F2C2_climits DB 01H
__04C75F1C_corecrt@h DB 01H
__E81B5085_vcruntime_new@h DB 01H
__130137D5_vcruntime_new_debug@h DB 01H
__8CF369C8_crtdbg@h DB 01H
__95C621C9_crtdefs@h DB 01H
__FEED0ABF_use_ansi@h DB 01H
__2816668F_yvals@h DB 01H
__92857972_corecrt_math@h DB 01H
__A29DED85_math@h DB 01H
__494656A0_corecrt_malloc@h DB 01H
__0C5B3DCC_stddef@h DB 01H
__F1F53BCE_corecrt_search@h DB 01H
__DD5AA43A_corecrt_wstdlib@h DB 01H
__71F46169_stdlib@h DB 01H
__9E56D030_cstdlib DB 01H
__05E338F6_xtr1common DB 01H
__99FA516B_intrin0@inl@h DB 01H
__8CEB98C2_intrin0@h DB 01H
__7A7B113A_cmath DB 01H
__C44F8F6B_corecrt_stdio_config@h DB 01H
__A7F89B2B_corecrt_wstdio@h DB 01H
__B5C48800_stdio@h DB 01H
__A651C215_cstdio DB 01H
__15E49872_errno@h DB 01H
__6BB4896E_vcruntime_string@h DB 01H
__184F7456_corecrt_memcpy_s@h DB 01H
__82377222_corecrt_memory@h DB 01H
__5B29309E_corecrt_wstring@h DB 01H
__F787F5CD_string@h DB 01H
__D2C478D0_cstring DB 01H
__E387ED1C_corecrt_wconio@h DB 01H
__78D0C915_corecrt_wctype@h DB 01H
__02A4DD57_corecrt_wdirect@h DB 01H
__A056EFF3_corecrt_share@h DB 01H
__91FC0EDF_corecrt_wio@h DB 01H
__6619318A_corecrt_wprocess@h DB 01H
__18070508_corecrt_wtime@h DB 01H
__3D2AFB26_types@h DB 01H
__72103B05_stat@h DB 01H
__4BE26BFD_wchar@h DB 01H
__3CDA1446_cwchar DB 01H
__3B9D0A9D_cstddef DB 01H
__D7870C25_initializer_list DB 01H
__5E44C2A9_xstddef DB 01H
__7F1A9170_iosfwd DB 01H
__C54FBE38_stdint@h DB 01H
__2308314D_cstdint DB 01H
__87BD5CA6_type_traits DB 01H
__A95B55BB_utility DB 01H
__EE76B579___msvc_iter_core@hpp DB 01H
__A997C6C5_xutility DB 01H
__B83B7185_iterator DB 01H
__83BF90D8_share@h DB 01H
__9D384591___msvc_system_error_abi@hpp DB 01H
__3B70B6EE_cerrno DB 01H
__E5D9469F_malloc@h DB 01H
__C78E68C1_corecrt_terminate@h DB 01H
__510B0051_eh@h DB 01H
__1BEF3287_vcruntime_exception@h DB 01H
__5D994F5F_exception DB 01H
__CDB0EEF0_float@h DB 01H
__D5150992_cfloat DB 01H
__B83F831D_isa_availability@h DB 01H
__B3F344F6_limits DB 01H
__7E4C13A5_new DB 01H
__5795C389_xatomic@h DB 01H
__C3CE3678_xmemory DB 01H
__B71DB0E4_xstring DB 01H
__D4D77502_stdexcept DB 01H
__D76B6AFE_xcall_once@h DB 01H
__80837380_xerrc@h DB 01H
__93FD7E51_time@h DB 01H
__BCC88D32_ctime DB 01H
__1F532584_xtimec@h DB 01H
__9FA33D0C_xthreads@h DB 01H
__D8C61834_atomic DB 01H
__683678DE_system_error DB 01H
__FA9853E6_vcruntime_typeinfo@h DB 01H
__D94835DC_typeinfo DB 01H
__0F5D4878_memory DB 01H
__23181F77_xfacet DB 01H
__274043E2___msvc_xlocinfo_types@hpp DB 01H
__6AECDA3E_ctype@h DB 01H
__A99A25B2_cctype DB 01H
__66B29864_locale@h DB 01H
__0DFA0CE1_clocale DB 01H
__C6C1D614_xlocinfo DB 01H
__6823C4D5_xlocale DB 01H
__FF24A107_xiosbase DB 01H
__D677CDBE_streambuf DB 01H
__F6A4A2C2_xlocnum DB 01H
__868129B3_ios DB 01H
__7B331E11_ostream DB 01H
__18E32B2B_istream DB 01H
__CBEEBCDA_iostream DB 01H
__FE5E3416_vector DB 01H
__3347223C_winpackagefamily@h DB 01H
__F5B671E4_winapifamily@h DB 01H
__6866F092_sdkddkver@h DB 01H
__D7225C87_excpt@h DB 01H
__F19000F7_stdarg@h DB 01H
__4114BAD5_specstrings_undef@h DB 01H
__50F9AEDC_specstrings_strict@h DB 01H
__BEFC0098_sdv_driverspecs@h DB 01H
__39A39701_driverspecs@h DB 01H
__B4D8BDAA_specstrings@h DB 01H
__B6CCE7CD_kernelspecs@h DB 01H
__201B1099_basetsd@h DB 01H
__8C99318D_guiddef@h DB 01H
__A3CAA675_pshpack4@h DB 01H
__2611E9B9_poppack@h DB 01H
__A747DAC7_pshpack2@h DB 01H
__AAD05F11_pshpack8@h DB 01H
__A501649E_pshpack1@h DB 01H
__0E9D9C0E_apiset@h DB 01H
__F9851A06_ktmtypes@h DB 01H
__9DA2B69E_winnt@h DB 01H
__E9AED855_minwindef@h DB 01H
__9668718B_windef@h DB 01H
__B47C9622_apisetcconv@h DB 01H
__77F4CE3E_minwinbase@h DB 01H
__42CF8FD5_apiquery2@h DB 01H
__A6C51434_processenv@h DB 01H
__415D7145_fileapi@h DB 01H
__A7316A9B_fileapifromapp@h DB 01H
__A0359A2D_debugapi@h DB 01H
__28BE1226_utilapiset@h DB 01H
__6933B394_handleapi@h DB 01H
__57F09DF9_errhandlingapi@h DB 01H
__E0622DF9_fibersapi@h DB 01H
__D531F6AB_namedpipeapi@h DB 01H
__ADD82BB4_profileapi@h DB 01H
__ECFC4D70_heapapi@h DB 01H
__4F41815B_ioapiset@h DB 01H
__8D44BFB7_synchapi@h DB 01H
__8CAEC090_interlockedapi@h DB 01H
__8ABF54F4_processthreadsapi@h DB 01H
__1462A586_sysinfoapi@h DB 01H
__369DBA4C_memoryapi@h DB 01H
__02D65571_enclaveapi@h DB 01H
__50387E19_threadpoollegacyapiset@h DB 01H
__C40195AA_threadpoolapiset@h DB 01H
__792B5764_jobapi@h DB 01H
__BAD0D5EB_jobapi2@h DB 01H
__C6FE0B21_wow64apiset@h DB 01H
__94EE79C1_libloaderapi@h DB 01H
__E203BDE6_securitybaseapi@h DB 01H
__9590F1DC_namespaceapi@h DB 01H
__0F4602F6_systemtopologyapi@h DB 01H
__B1B3B677_processtopologyapi@h DB 01H
__7DD200C2_securityappcontainer@h DB 01H
__130664A2_realtimeapiset@h DB 01H
__A8C6672F_winerror@h DB 01H
__A093DD28_timezoneapi@h DB 01H
__6BD3506C_winbase@h DB 01H
__DABCB3B7_wingdi@h DB 01H
__CD8F5E54_tvout@h DB 01H
__033B1B1B_winuser@h DB 01H
__F8663FCA_datetimeapi@h DB 01H
__03A9DF8F_winnls@h DB 01H
__CB7A78CC_stringapiset@h DB 01H
__3F149E59_wincontypes@h DB 01H
__7CC6F8F3_consoleapi@h DB 01H
__D4BE3EA3_consoleapi2@h DB 01H
__D57C5494_consoleapi3@h DB 01H
__FD7284F3_wincon@h DB 01H
__2EBE7A74_verrsrc@h DB 01H
__2FF32671_winver@h DB 01H
__E384C5B4_reason@h DB 01H
__C09EE12A_winreg@h DB 01H
__F1A080AC_wnnc@h DB 01H
__C375DB87_winnetwk@h DB 01H
__F202032E_cderr@h DB 01H
__96C2AB0F_dde@h DB 01H
__005A4F24_ddeml@h DB 01H
__8B7EE07A_dlgs@h DB 01H
__0D44BE7C_lzexpand@h DB 01H
__7DBDB4C6_mmsyscom@h DB 01H
__DE89C4CA_mciapi@h DB 01H
__42D37885_mmiscapi@h DB 01H
__6DE6FF2A_mmiscapi2@h DB 01H
__FF70E3D7_playsoundapi@h DB 01H
__F9747FEC_mmeapi@h DB 01H
__651C1006_timeapi@h DB 01H
__60A046E1_joystickapi@h DB 01H
__C0C01F30_mmsystem@h DB 01H
__A366D611_nb30@h DB 01H
__2CD5644B_rpcdcep@h DB 01H
__B77D54A9_rpcdce@h DB 01H
__1C5A7A47_rpcnsi@h DB 01H
__71643EA7_rpcnterr@h DB 01H
__38122515_rpcasync@h DB 01H
__DEF407DB_rpc@h DB 01H
__064CC72C_shellapi@h DB 01H
__6AB78C00_winperf@h DB 01H
__683BB200_inaddr@h DB 01H
__46EE45A6_winsock@h DB 01H
__924250EA_bcrypt@h DB 01H
__7D79DD11_ncrypt@h DB 01H
__C925E4C0_dpapi@h DB 01H
__CE4C9021_wincrypt@h DB 01H
__1BC40EFA_winefs@h DB 01H
__6BCC8C1A_rpcnsip@h DB 01H
__C065EC3F_rpcsal@h DB 01H
__7973C144_rpcndr@h DB 01H
__B58B1953_wtypesbase@h DB 01H
__013FEE7F_wtypes@h DB 01H
__62733496_winioctl@h DB 01H
__B9109027_winsmcrd@h DB 01H
__87A76A69_winscard@h DB 01H
__8C0F76A7_prsht@h DB 01H
__11B57AC7_winspool@h DB 01H
__DBA05CC8_unknwnbase@h DB 01H
__D99DEA84_objidlbase@h DB 01H
__A2F85269_cguid@h DB 01H
__A856EBD7_combaseapi@h DB 01H
__47009772_unknwn@h DB 01H
__558FF34F_objidl@h DB 01H
__EA6828E6_oaidl@h DB 01H
__DD5918D8_propidlbase@h DB 01H
__A0E2593F_coml2api@h DB 01H
__F4E63AC7_oleidl@h DB 01H
__0E8757FF_servprov@h DB 01H
__13616BE7_msxml@h DB 01H
__287654D0_urlmon@h DB 01H
__3465A794_propidl@h DB 01H
__D5EE8840_objbase@h DB 01H
__B5981418_oleauto@h DB 01H
__3AE83FC5_ole2@h DB 01H
__5F30FE09_commdlg@h DB 01H
__DD9DD587_stralign@h DB 01H
__B85B9837_winsvc@h DB 01H
__12FBC1E4_mcx@h DB 01H
__BC6D10F5_ime_cmodes@h DB 01H
__1D49718C_imm@h DB 01H
__95734585_windows@h DB 01H
__B7550D8B_algorithm DB 01H
__6229CAFC_dotProduct@cpp DB 01H
msvcjmc	ENDS
;	COMDAT ?__LINE__Var@?0???$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z@4JA DD 045H ; `std::_Voidify_iter<float *>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@2@QEAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@2@QEAM@Z@4JA DD 045H ; `std::_Default_allocator_traits<std::allocator<float> >::construct<float>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ@4JA DD 045H ; `std::_Uninitialized_backout_al<std::allocator<float> >::_Emplace_back<>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z@4JA DD 0756H ; `std::_To_address<float *>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z@4JA DD 045H ; `std::_Zero_range<float *>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Unfancy@M@std@@YAPEAMPEAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Unfancy@M@std@@YAPEAMPEAM@Z@4JA DD 045H ; `std::_Unfancy<float>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@2@@Z@4JA DD 0674H ; `std::_Uninitialized_backout_al<std::allocator<float> >::_Uninitialized_backout_al<std::allocator<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ@4JA DD 0679H ; `std::_Uninitialized_backout_al<std::allocator<float> >::~_Uninitialized_backout_al<std::allocator<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ@4JA DD 0683H ; `std::_Uninitialized_backout_al<std::allocator<float> >::_Release'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAX_K@Z@4JA DD 045H ; `std::_Uninitialized_backout_al<std::allocator<float> >::__autoclassinit2'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Get_size_of_n@$03@std@@YA_K_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Get_size_of_n@$03@std@@YA_K_K@Z@4JA DD 045H ; `std::_Get_size_of_n<4>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@1@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@1@@Z@4JA DD 045H ; `std::_Uninitialized_value_construct_n<std::allocator<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@1@AEBV21@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@1@AEBV21@@Z@4JA DD 045H ; `std::forward<std::allocator<float> const &>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@3@XZ@4JA DD 056bH ; `std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??allocate@?$allocator@M@std@@QEAAPEAM_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??allocate@?$allocator@M@std@@QEAAPEAM_K@Z@4JA DD 0341H ; `std::allocator<float>::allocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@3@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@3@@Z@4JA DD 02b5H ; `std::_Default_allocator_traits<std::allocator<float> >::max_size'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@3@XZ@4JA DD 08c7H ; `std::vector<float,std::allocator<float> >::_Getal'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ@4JA DD 078fH ; `std::vector<float,std::allocator<float> >::max_size'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA DD 07faH ; `std::vector<float,std::allocator<float> >::_Buy_raw'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ@4JA DD 0898H ; `std::vector<float,std::allocator<float> >::_Xlength'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA DD 080aH ; `std::vector<float,std::allocator<float> >::_Buy_nonzero'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4JA DD 0186H ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4JA DD 021H ; `std::_Tidy_guard<std::vector<float,std::allocator<float> > >::~_Tidy_guard<std::vector<float,std::allocator<float> > >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@1@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@1@@Z@4JA DD 045H ; `std::_Destroy_range<std::allocator<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4JA DD 045H ; `std::vector<float,std::allocator<float> >::_Construct_n<>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@2@AEBV?$allocator@M@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@2@AEBV?$allocator@M@2@@Z@4JA DD 045H ; `std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><std::allocator<float> const &>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@2@@Z@4JA DD 045H ; `std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z@4JA DD 033bH ; `std::allocator<float>::deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@3@XZ@4JA DD 0567H ; `std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ@4JA DD 0832H ; `std::vector<float,std::allocator<float> >::_Tidy'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@3@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@3@XZ@4JA DD 08c3H ; `std::vector<float,std::allocator<float> >::_Getal'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$allocator@M@std@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$allocator@M@std@@QEAA@XZ@4JA DD 0333H ; `std::allocator<float>::allocator<float>'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@2@@Z@4JA DD 02a9H ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4JA DD 033dH ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z@4JA DD 09H ; `std::vector<float,std::allocator<float> >::__autoclassinit2'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '4', 00H, '.', 00H, '3', 00H, '1', 00H, '9'
	DB	00H, '3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'34.31933\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0?$allocator@M@std@@QEAA@XZ			; std::allocator<float>::allocator<float>
PUBLIC	?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z	; std::allocator<float>::deallocate
PUBLIC	?allocate@?$allocator@M@std@@QEAAPEAM_K@Z	; std::allocator<float>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ; std::_Default_allocator_traits<std::allocator<float> >::max_size
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
PUBLIC	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
PUBLIC	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
PUBLIC	?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
PUBLIC	?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ ; std::vector<float,std::allocator<float> >::_Xlength
PUBLIC	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
PUBLIC	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z ; std::vector<float,std::allocator<float> >::__autoclassinit2
PUBLIC	main
PUBLIC	??0?$allocator@_K@std@@QEAA@XZ			; std::allocator<unsigned __int64>::allocator<unsigned __int64>
PUBLIC	?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z	; std::allocator<unsigned __int64>::deallocate
PUBLIC	?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z	; std::allocator<unsigned __int64>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::max_size
PUBLIC	??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::vector<unsigned __int64,std::allocator<unsigned __int64> >
PUBLIC	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
PUBLIC	?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_end
PUBLIC	?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::max_size
PUBLIC	?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
PUBLIC	?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Xlength
PUBLIC	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
PUBLIC	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<unsigned __int64> >::_Vector_val<std::_Simple_types<unsigned __int64> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::__autoclassinit2
PUBLIC	??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z	; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>
PUBLIC	?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ	; std::initializer_list<unsigned __int64>::begin
PUBLIC	?end@?$initializer_list@_K@std@@QEBAPEB_KXZ	; std::initializer_list<unsigned __int64>::end
PUBLIC	?size@?$initializer_list@_K@std@@QEBA_KXZ	; std::initializer_list<unsigned __int64>::size
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1><std::allocator<unsigned __int64> const &>
PUBLIC	??$_Convert_size@_K_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64,unsigned __int64>
PUBLIC	??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Construct_n<unsigned __int64 const *,unsigned __int64 const *>
PUBLIC	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
PUBLIC	??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><std::allocator<float> const &>
PUBLIC	??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Construct_n<>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ; std::_Destroy_range<std::allocator<unsigned __int64> >
PUBLIC	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z ; std::forward<std::allocator<unsigned __int64> const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >::~_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >
PUBLIC	??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z	; std::forward<unsigned __int64 const *>
PUBLIC	??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z ; std::_Uninitialized_copy<unsigned __int64 const *,unsigned __int64 const *,std::allocator<unsigned __int64> >
PUBLIC	??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z ; std::forward<std::allocator<float> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<float,std::allocator<float> > >::~_Tidy_guard<std::vector<float,std::allocator<float> > >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<float> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Get_size_of_n@$03@std@@YA_K_K@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z	; std::move<unsigned __int64 const * &>
PUBLIC	??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z	; std::_Get_unwrapped<unsigned __int64 const *>
PUBLIC	??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z	; std::_To_address<unsigned __int64 const *>
PUBLIC	??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z		; std::_Unfancy<unsigned __int64>
PUBLIC	??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z ; std::_Copy_memmove<unsigned __int64 const *,unsigned __int64 *>
PUBLIC	??$_Unfancy@M@std@@YAPEAMPEAM@Z			; std::_Unfancy<float>
PUBLIC	??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z		; std::_Zero_range<float *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z	; std::_To_address<unsigned __int64 *>
PUBLIC	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z	; std::_To_address<float *>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	?A@@3V?$vector@MV?$allocator@M@std@@@std@@A	; A
PUBLIC	?B@@3V?$vector@MV?$allocator@M@std@@@std@@A	; B
PUBLIC	??_C@_0O@FDAAJLA@Vector?5size?3?5@		; `string'
PUBLIC	??_C@_08GFGBMIFC@?5seconds@			; `string'
PUBLIC	??_C@_0CE@NFIFCEPN@QueryPerformance?5min?5resolution@ ; `string'
PUBLIC	??_C@_0P@JGLEFFKN@Running?5time?3?5@		; `string'
PUBLIC	??_C@_0N@JLJLOBDF@Run?5number?3?5@		; `string'
PUBLIC	??_C@_0O@PDJMEAPF@Error?5value?3?5@		; `string'
PUBLIC	??_C@_0P@DJDBHIJH@Average?5time?3?5@		; `string'
PUBLIC	??_C@_0M@GCMGFMPD@TotalTime?3?5@		; `string'
PUBLIC	??_C@_0CI@OLPOAAPL@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_05PDJBBECF@pause@				; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GB@OIADIBJN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MC@JGAHOMKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4024000000000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	atexit:PROC
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_system:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@K@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_QueryPerformanceCounter:PROC
EXTRN	__imp_QueryPerformanceFrequency:PROC
EXTRN	?dotProduct@@YAMPEAM0H@Z:PROC			; dotProduct
EXTRN	_CxxThrowException:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?A@@3V?$vector@MV?$allocator@M@std@@@std@@A DB 020H DUP (?) ; A
?B@@3V?$vector@MV?$allocator@M@std@@@std@@A DB 020H DUP (?) ; B
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN6
	DD	imagerel $LN6+45
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+52
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+33
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+52
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+55
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+33
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+52
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN4
	DD	imagerel $LN4+44
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN24
	DD	imagerel $LN24+309
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+53
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+37
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+34
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN13
	DD	imagerel $LN13+82
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+34
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+37
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+89
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+46
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN5
	DD	imagerel $LN5+26
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@M@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??0?$allocator@M@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z DD imagerel $LN14
	DD	imagerel $LN14+161
	DD	imagerel $unwind$?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD imagerel $LN14
	DD	imagerel $LN14+162
	DD	imagerel $unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+68
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+29
	DD	imagerel $unwind$?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+34
	DD	imagerel $unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+34
	DD	imagerel $unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+52
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EA@@YAXXZ DD imagerel ??__EA@@YAXXZ
	DD	imagerel ??__EA@@YAXXZ+79
	DD	imagerel $unwind$??__EA@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EB@@YAXXZ DD imagerel ??__EB@@YAXXZ
	DD	imagerel ??__EB@@YAXXZ+79
	DD	imagerel $unwind$??__EB@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN29
	DD	imagerel $LN29+1125
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@_K@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??0?$allocator@_K@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD imagerel $LN14
	DD	imagerel $LN14+161
	DD	imagerel $unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+134
	DD	imagerel $unwind$??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+68
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+29
	DD	imagerel $unwind$?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+34
	DD	imagerel $unwind$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+34
	DD	imagerel $unwind$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+52
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@_K@std@@QEBAPEB_KXZ DD imagerel $LN5
	DD	imagerel $LN5+31
	DD	imagerel $unwind$?end@?$initializer_list@_K@std@@QEBAPEB_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$initializer_list@_K@std@@QEBA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+38
	DD	imagerel $unwind$?size@?$initializer_list@_K@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN40
	DD	imagerel $LN40+529
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+59
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+49
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K_K@std@@YA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z DD imagerel $LN8
	DD	imagerel $LN8+221
	DD	imagerel $unwind$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DD imagerel $LN8
	DD	imagerel $LN8+195
	DD	imagerel $unwind$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN6
	DD	imagerel $LN6+75
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+61
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN9
	DD	imagerel $LN9+137
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+52
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+52
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+122
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+55
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+49
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+45
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+186
	DD	imagerel $unwind$??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+45
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+63
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+55
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+69
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+56
	DD	imagerel $unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+56
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z DD imagerel $LN4
	DD	imagerel $LN4+131
	DD	imagerel $unwind$??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAA@PEA_KAEAV?$allocator@_K@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+66
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAA@PEA_KAEAV?$allocator@_K@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+42
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAPEA_KXZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAPEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEB_K@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXAEB_K@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??$_Emplace_back@AEB_K@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXAEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@M@std@@YAPEAMPEAM@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Unfancy@M@std@@YAPEAMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z DD imagerel $LN4
	DD	imagerel $LN4+116
	DD	imagerel $unwind$??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+66
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+42
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN16
	DD	imagerel $LN16+182
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEB_K@std@@YAAEB_KAEB_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$forward@AEB_K@std@@YAAEB_KAEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@_KAEB_K@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_KAEB_K@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??$construct@_KAEB_K@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_KAEB_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z DD imagerel $LN4
	DD	imagerel $LN4+52
	DD	imagerel $unwind$??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEA_K@std@@YAPEAXPEA_K@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Voidify_iter@PEA_K@std@@YAPEAXPEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z DD imagerel $LN5
	DD	imagerel $LN5+30
	DD	imagerel $unwind$??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z
pdata	ENDS
CRT$XCU	SEGMENT
?A$initializer$@@3P6AXXZEA DQ FLAT:??__EA@@YAXXZ	; A$initializer$
CRT$XCU	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@JGAHOMKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MC@JGAHOMKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '4', 00H, '.', 00H, '3', 00H, '1', 00H, '9'
	DB	00H, '3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@OIADIBJN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GB@OIADIBJN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'34.31933\include\vector', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDJBBECF@pause@
CONST	SEGMENT
??_C@_05PDJBBECF@pause@ DB 'pause', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OLPOAAPL@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0CI@OLPOAAPL@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB '-'
	DB	'--------------------------------------', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCMGFMPD@TotalTime?3?5@
CONST	SEGMENT
??_C@_0M@GCMGFMPD@TotalTime?3?5@ DB 'TotalTime: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DJDBHIJH@Average?5time?3?5@
CONST	SEGMENT
??_C@_0P@DJDBHIJH@Average?5time?3?5@ DB 'Average time: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PDJMEAPF@Error?5value?3?5@
CONST	SEGMENT
??_C@_0O@PDJMEAPF@Error?5value?3?5@ DB 'Error value: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLJLOBDF@Run?5number?3?5@
CONST	SEGMENT
??_C@_0N@JLJLOBDF@Run?5number?3?5@ DB 'Run number: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JGLEFFKN@Running?5time?3?5@
CONST	SEGMENT
??_C@_0P@JGLEFFKN@Running?5time?3?5@ DB 'Running time: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NFIFCEPN@QueryPerformance?5min?5resolution@
CONST	SEGMENT
??_C@_0CE@NFIFCEPN@QueryPerformance?5min?5resolution@ DB 'QueryPerformanc'
	DB	'e min resolution: 1/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08GFGBMIFC@?5seconds@
CONST	SEGMENT
??_C@_08GFGBMIFC@?5seconds@ DB ' seconds', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FDAAJLA@Vector?5size?3?5@
CONST	SEGMENT
??_C@_0O@FDAAJLA@Vector?5size?3?5@ DB 'Vector size: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 091H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAM@std@@YAPEAXPEAM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEA_K@std@@YAPEAXPEA_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@M$$V@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@QEAM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@_KAEB_K@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_KAEB_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEB_K@std@@YAAEB_KAEB_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAAPEAMXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@M@std@@@std@@QEAA@PEAMAEAV?$allocator@M@1@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z DD 041919H
	DD	0c340aH
	DD	07006720aH
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@M@std@@YAPEAMPEAM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEB_K@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXAEB_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAPEA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAA@PEA_KAEAV?$allocator@_K@1@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z DD 041719H
	DD	070047208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z DD 061a19H
	DD	0e007920bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 041919H
	DD	0c340aH
	DD	07006720aH
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'B'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	'N'
	DB	00H
	DB	' '
	DB	02H
	DB	082H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0cH
	DD	imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DB 06H
	DB	0aaH
	DB	00H
	DB	'"'
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DD 061e19H
	DD	0f640fH
	DD	0e340fH
	DD	0700b920fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z DB 06H
	DB	0b2H
	DB	00H
	DB	'"'
	DB	02H
	DB	0c2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z
	DD	imagerel $ip2state$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z DD 071c19H
	DD	0f009a20dH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K_K@std@@YA_K_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	08cH
	DB	00H
	DB	092H
	DB	02H
	DB	'D'
	DB	04H
	DB	'u', 04H
	DB	02H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	011H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	'A', 07H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0aH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DB	050H
	DB	030H
	DB	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081619H
	DD	0f3416H
	DD	0f0127216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$initializer_list@_K@std@@QEBA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@_K@std@@QEBAPEB_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@_K@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DB 06H
	DB	0f1H, 05H
	DB	00H
	DB	08aH
	DB	02H
	DB	'a', 09H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DB 02H
	DB	0aH
	DD	imagerel ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
	DB	061H
	DB	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$main DB 028H
	DD	imagerel $stateUnwindMap$main
	DD	imagerel $ip2state$main
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	0134119H
	DD	0109833H
	DD	011882eH
	DD	0127829H
	DD	0136824H
	DD	02e741fH
	DD	02d641fH
	DD	02c341fH
	DD	028011fH
	DD	0e012f014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$main
	DD	0faH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EB@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EA@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@M@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 021519H
	DD	030025206H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 081501H
	DD	0a7415H
	DD	095415H
	DD	083415H
	DD	0e0115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 020601H
	DD	030023206H
xdata	ENDS
CRT$XCU	SEGMENT
?B$initializer$@@3P6AXXZEA DQ FLAT:??__EB@@YAXXZ	; B$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z
_TEXT	SEGMENT
_Val$ = 48
??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z PROC		; std::_To_address<float *>, COMDAT

; 3712 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]

; 3713 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3714 :     return _Val;
; 3715 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ENDP		; std::_To_address<float *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z
_TEXT	SEGMENT
_Val$ = 48
??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z PROC		; std::_To_address<unsigned __int64 *>, COMDAT

; 3712 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]

; 3713 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3714 :     return _Val;
; 3715 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z ENDP		; std::_To_address<unsigned __int64 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 64
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN16:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	lea	rcx, QWORD PTR [rbx+47]
	cmp	rcx, rbx
	jbe	$LN15@Allocate_m

; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	rbx, rax

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	jne	SHORT $LN6@Allocate_m
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, OFFSET FLAT:??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	r8d, 135				; 00000087H
	lea	ecx, QWORD PTR [rbx+2]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	mov	r9d, 135				; 00000087H
	mov	QWORD PTR [rsp+32], 0
	lea	r8, OFFSET FLAT:??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
$LN6@Allocate_m:

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rax, QWORD PTR [rbx+47]

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;
; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	rcx, -361700864190383366		; fafafafafafafafaH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR [rax-8], rbx
	mov	QWORD PTR [rax-16], rcx

; 141  : #endif // _DEBUG
; 142  :     return _Ptr;
; 143  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN15@Allocate_m:

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;
; 130  :     if (_Block_size <= _Bytes) {
; 131  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN13@Allocate_m:
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z
_TEXT	SEGMENT
_First$GSCopy$ = 32
_Last$GSCopy$ = 40
__$ArrayPad$ = 48
_First$ = 80
_Last$ = 88
??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z PROC		; std::_Zero_range<float *>, COMDAT

; 1878 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

$LN4:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	QWORD PTR _First$GSCopy$[rsp], rcx
	mov	rdi, rdx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	QWORD PTR _Last$GSCopy$[rsp], rdx
	call	__CheckForDebuggerJustMyCode
	lea	rcx, QWORD PTR _First$GSCopy$[rsp]
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	lea	rcx, QWORD PTR _Last$GSCopy$[rsp]
	mov	rbx, rax
	call	??$_To_address@PEAM@std@@YA?A_PAEBQEAM@Z ; std::_To_address<float *>
	sub	rax, rbx
	xor	edx, edx
	mov	r8, rax
	mov	rcx, rbx
	call	memset
	mov	rax, rdi

; 1879 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 1880 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 1881 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));
; 1882 :     return _Last;
; 1883 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z ENDP		; std::_Zero_range<float *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
;	COMDAT ??$_Unfancy@M@std@@YAPEAMPEAM@Z
_TEXT	SEGMENT
_Ptr$ = 48
??$_Unfancy@M@std@@YAPEAMPEAM@Z PROC			; std::_Unfancy<float>, COMDAT

; 293  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__5E44C2A9_xstddef
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 294  :     return _Ptr;
; 295  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Unfancy@M@std@@YAPEAMPEAM@Z ENDP			; std::_Unfancy<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z
_TEXT	SEGMENT
_First$GSCopy$ = 32
_Last$GSCopy$ = 40
_Dest$GSCopy$ = 48
__$ArrayPad$ = 56
_First$ = 96
_Last$ = 104
_Dest$ = 112
??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z PROC ; std::_Copy_memmove<unsigned __int64 const *,unsigned __int64 *>, COMDAT

; 3833 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	QWORD PTR _First$GSCopy$[rsp], rcx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	mov	QWORD PTR _Last$GSCopy$[rsp], rdx
	mov	QWORD PTR _Dest$GSCopy$[rsp], r8
	call	__CheckForDebuggerJustMyCode
	lea	rcx, QWORD PTR _First$GSCopy$[rsp]
	call	??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z ; std::_To_address<unsigned __int64 const *>
	lea	rcx, QWORD PTR _Last$GSCopy$[rsp]
	mov	rdi, rax
	call	??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z ; std::_To_address<unsigned __int64 const *>
	lea	rcx, QWORD PTR _Dest$GSCopy$[rsp]
	mov	rsi, rax
	call	??$_To_address@PEA_K@std@@YA?A_PAEBQEA_K@Z ; std::_To_address<unsigned __int64 *>
	sub	rsi, rdi
	mov	rdx, rdi
	mov	r8, rsi
	mov	rcx, rax
	mov	rbx, rax
	call	memmove
	lea	rax, QWORD PTR [rsi+rbx]

; 3834 :     auto _FirstPtr              = _To_address(_First);
; 3835 :     auto _LastPtr               = _To_address(_Last);
; 3836 :     auto _DestPtr               = _To_address(_Dest);
; 3837 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 3838 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 3839 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 3840 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);
; 3841 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);
; 3842 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 3843 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);
; 3844 :     } else {
; 3845 :         return _Dest + (_LastPtr - _FirstPtr);
; 3846 :     }
; 3847 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z ENDP ; std::_Copy_memmove<unsigned __int64 const *,unsigned __int64 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
;	COMDAT ??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z PROC			; std::_Unfancy<unsigned __int64>, COMDAT

; 293  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__5E44C2A9_xstddef
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 294  :     return _Ptr;
; 295  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z ENDP			; std::_Unfancy<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z
_TEXT	SEGMENT
_Val$ = 48
??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z PROC		; std::_To_address<unsigned __int64 const *>, COMDAT

; 3712 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]

; 3713 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 3714 :     return _Val;
; 3715 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z ENDP		; std::_To_address<unsigned __int64 const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z PROC	; std::_Get_unwrapped<unsigned __int64 const *>, COMDAT

; 911  :     !_Unwrappable_v<_Iter> || _Has_nothrow_unwrapped<_Iter>) {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]

; 912  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 913  :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 914  :         return _It + 0;
; 915  :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 916  :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 917  :     } else {
; 918  :         return static_cast<_Iter&&>(_It);
; 919  :     }
; 920  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z ENDP	; std::_Get_unwrapped<unsigned __int64 const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
;	COMDAT ??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z
_TEXT	SEGMENT
_Arg$ = 48
??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z PROC	; std::move<unsigned __int64 const * &>, COMDAT

; 1436 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__87BD5CA6_type_traits
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1437 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);
; 1438 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z ENDP	; std::move<unsigned __int64 const * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, r8
	mov	rdi, rdx
	call	__CheckForDebuggerJustMyCode
	shl	rbx, 4
	mov	rcx, rdi
	mov	rdx, rbx
	mov	rbx, QWORD PTR [rsp+48]

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);
; 669  :         }
; 670  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 48
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1425 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__87BD5CA6_type_traits
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1426 :     return static_cast<_Ty&&>(_Arg);
; 1427 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 200  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 201  :     if constexpr (is_pointer_v<_Iter>) {
; 202  :         return const_cast<void*>(static_cast<const volatile void*>(_It));
; 203  :     } else {
; 204  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 205  :     }
; 206  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 48
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__5E44C2A9_xstddef
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 281  :     return __builtin_addressof(_Val);
; 282  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rbx, rax
	ja	SHORT $LN6@Get_size_o

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	lea	rax, QWORD PTR [rbx*8]

; 66   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@Get_size_o:

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 60   :         if (_Count > _Max_possible) {
; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$03@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<4>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, 4611686018427387903		; 3fffffffffffffffH
	cmp	rbx, rax
	ja	SHORT $LN6@Get_size_o

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	lea	rax, QWORD PTR [rbx*4]

; 66   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@Get_size_o:

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 60   :         if (_Count > _Max_possible) {
; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$03@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 221  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN2@Allocate

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization
; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, rbx

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization
; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

	test	rbx, rbx
	je	SHORT $LN3@Allocate

; 235  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, rbx

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 235  :         return _Traits::_Allocate(_Bytes);

	jmp	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
$LN3@Allocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	xor	eax, eax

; 239  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	rbx, rax
	ja	SHORT $LN6@Get_size_o

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	shl	rbx, 4
	mov	rax, rbx

; 66   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@Get_size_o:

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 60   :         if (_Count > _Max_possible) {
; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 48
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__5E44C2A9_xstddef
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 294  :     return _Ptr;
; 295  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<float> >, COMDAT

; 1887 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rdi
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	rcx, rax
	lea	rdx, QWORD PTR [rax+rbx*4]
	call	??$_Zero_range@PEAM@std@@YAPEAMQEAM0@Z	; std::_Zero_range<float *>
	lea	rax, QWORD PTR [rdi+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]

; 1888 :     // value-initialize _Count objects to raw _First, using _Al
; 1889 :     using _Ptrty = typename _Alloc::value_type*;
; 1890 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1891 : #if _HAS_CXX20
; 1892 :         if (!_STD is_constant_evaluated())
; 1893 : #endif // _HAS_CXX20
; 1894 :         {
; 1895 :             auto _PFirst = _Unfancy(_First);
; 1896 :             _Zero_range(_PFirst, _PFirst + _Count);
; 1897 :             return _First + _Count;
; 1898 :         }
; 1899 :     }
; 1900 : 
; 1901 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1902 :     for (; 0 < _Count; --_Count) {
; 1903 :         _Backout._Emplace_back();
; 1904 :     }
; 1905 : 
; 1906 :     return _Backout._Release();
; 1907 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<float,std::allocator<float> > >::~_Tidy_guard<std::vector<float,std::allocator<float> > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy_guard

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 34   :         if (_Target) {
; 35   :             _Target->_Tidy();

	jmp	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<float,std::allocator<float> > >::~_Tidy_guard<std::vector<float,std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 48
??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z PROC ; std::forward<std::allocator<float> const &>, COMDAT

; 1425 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__87BD5CA6_type_traits
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1426 :     return static_cast<_Ty&&>(_Arg);
; 1427 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z ENDP ; std::forward<std::allocator<float> const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z
_TEXT	SEGMENT
_ULast$ = 32
_UFirst$ = 40
_First$GSCopy$ = 48
_Last$GSCopy$ = 56
__$ArrayPad$ = 64
_First$ = 128
_Last$ = 136
_Dest$ = 144
_Al$ = 152
??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z PROC ; std::_Uninitialized_copy<unsigned __int64 const *,unsigned __int64 const *,std::allocator<unsigned __int64> >, COMDAT

; 1680 :     _InIt _First, _Se _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN9:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	QWORD PTR _First$GSCopy$[rsp], rcx
	mov	r14, r8
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	QWORD PTR _Last$GSCopy$[rsp], rdx
	call	__CheckForDebuggerJustMyCode
	lea	rcx, QWORD PTR _First$GSCopy$[rsp]
	call	??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z ; std::move<unsigned __int64 const * &>
	mov	rcx, rax
	call	??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z ; std::_Get_unwrapped<unsigned __int64 const *>
	lea	rcx, QWORD PTR _Last$GSCopy$[rsp]
	mov	QWORD PTR _UFirst$[rsp], rax
	mov	rbp, rax
	call	??$move@AEAPEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z ; std::move<unsigned __int64 const * &>
	mov	rcx, rax
	call	??$_Get_unwrapped@PEB_K@std@@YA?A_T$$QEAPEB_K@Z ; std::_Get_unwrapped<unsigned __int64 const *>
	mov	rcx, r14
	mov	QWORD PTR _ULast$[rsp], rax
	mov	rsi, rax
	call	??$_Unfancy@_K@std@@YAPEA_KPEA_K@Z	; std::_Unfancy<unsigned __int64>
	lea	rcx, QWORD PTR _ULast$[rsp]
	mov	rdi, rax
	call	??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z ; std::_To_address<unsigned __int64 const *>
	lea	rcx, QWORD PTR _UFirst$[rsp]
	mov	rbx, rax
	call	??$_To_address@PEB_K@std@@YA?A_PAEBQEB_K@Z ; std::_To_address<unsigned __int64 const *>
	mov	rcx, rax
	mov	r8, rdi
	mov	rdx, rbx
	call	??$_Copy_memmove@PEB_KPEA_K@std@@YAPEA_KPEB_K0PEA_K@Z ; std::_Copy_memmove<unsigned __int64 const *,unsigned __int64 *>
	sub	rsi, rbp
	sar	rsi, 3
	lea	rax, QWORD PTR [r14+rsi*8]

; 1681 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1682 :     // note: only called internally from elsewhere in the STL
; 1683 :     using _Ptrval = typename _Alloc::value_type*;
; 1684 : 
; 1685 : #ifdef __cpp_lib_concepts
; 1686 :     auto _UFirst = _RANGES _Unwrap_iter<_Se>(_STD move(_First));
; 1687 :     auto _ULast  = _RANGES _Unwrap_sent<_InIt>(_STD move(_Last));
; 1688 : #else // ^^^ __cpp_lib_concepts / !__cpp_lib_concepts vvv
; 1689 :     // In pre-concepts world, _Uninitialized_copy should only ever be called with an iterator
; 1690 :     // and sentinel of the same type, so `_Get_unwrapped` is fine to call.
; 1691 :     auto _UFirst = _Get_unwrapped(_STD move(_First));
; 1692 :     auto _ULast = _Get_unwrapped(_STD move(_Last));
; 1693 : #endif // ^^^ !__cpp_lib_concepts ^^^
; 1694 : 
; 1695 :     constexpr bool _Can_memmove = _Sent_copy_cat<decltype(_UFirst), decltype(_ULast), _Ptrval>::_Bitcopy_constructible
; 1696 :                                && _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>::value;
; 1697 : 
; 1698 :     if constexpr (_Can_memmove) {
; 1699 : #if _HAS_CXX20
; 1700 :         if (!_STD is_constant_evaluated())
; 1701 : #endif // _HAS_CXX20
; 1702 :         {
; 1703 :             if constexpr (is_same_v<decltype(_UFirst), decltype(_ULast)>) {
; 1704 :                 _Copy_memmove(_To_address(_UFirst), _To_address(_ULast), _Unfancy(_Dest));
; 1705 :                 _Dest += _ULast - _UFirst;
; 1706 :             } else {
; 1707 :                 const auto _Count = static_cast<size_t>(_ULast - _UFirst);
; 1708 :                 _Copy_memmove_n(_To_address(_UFirst), _Count, _Unfancy(_Dest));
; 1709 :                 _Dest += _Count;
; 1710 :             }
; 1711 :             return _Dest;
; 1712 :         }
; 1713 :     }
; 1714 : 
; 1715 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1716 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1717 :         _Backout._Emplace_back(*_UFirst);
; 1718 :     }
; 1719 : 
; 1720 :     return _Backout._Release();
; 1721 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z ENDP ; std::_Uninitialized_copy<unsigned __int64 const *,unsigned __int64 const *,std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
;	COMDAT ??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z
_TEXT	SEGMENT
_Arg$ = 48
??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z PROC	; std::forward<unsigned __int64 const *>, COMDAT

; 1425 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__87BD5CA6_type_traits
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1426 :     return static_cast<_Ty&&>(_Arg);
; 1427 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z ENDP	; std::forward<unsigned __int64 const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >::~_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >, COMDAT

; 33   :     _CONSTEXPR20 ~_Tidy_guard() {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy_guard

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 34   :         if (_Target) {
; 35   :             _Target->_Tidy();

	jmp	?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
$LN2@Tidy_guard:

; 36   :         }
; 37   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >::~_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1340 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
	je	SHORT $LN2@Container_

; 1341 :         if (_Ptr) {
; 1342 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rcx, QWORD PTR [rbx+8]

; 1343 :         }
; 1344 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1341 :         if (_Ptr) {
; 1342 :             _Delete_plain_internal(_Al, _Ptr);

	jmp	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1343 :         }
; 1344 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 48
_Al_$ = 56
_Mycont$ = 64
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1326 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

$LN4:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rsi, r8
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rdi
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	edx, 1
	mov	QWORD PTR [rdi+8], rbx
	mov	rcx, rbx
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, rsi
	mov	QWORD PTR [rdi], rax
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	rcx, QWORD PTR [rdi]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T1[rsp], rax
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	mov	rax, QWORD PTR [rdi]
	mov	rbx, QWORD PTR [rsp+56]
	mov	QWORD PTR [rsi], rax
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+64]

; 1327 :         // create a new _Container_proxy pointing at _Mycont
; 1328 :         _Ptr = _Unfancy(_Al_.allocate(1));
; 1329 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));
; 1330 :         _Mycont._Myproxy = _Ptr;
; 1331 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 48
??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z PROC ; std::forward<std::allocator<unsigned __int64> const &>, COMDAT

; 1425 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__87BD5CA6_type_traits
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1426 :     return static_cast<_Ty&&>(_Arg);
; 1427 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z ENDP ; std::forward<std::allocator<unsigned __int64> const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 980  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	r8d, 1
	mov	rdx, rbx
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+48]

; 981  :     // deallocate a plain pointer using an allocator
; 982  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 983  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 984  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);
; 985  :     } else {
; 986  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 987  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 988  :     }
; 989  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$GSCopy$ = 32
_Bytes$GSCopy$ = 40
__$ArrayPad$ = 48
_Ptr$ = 80
_Bytes$ = 88
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 242  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN6:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx
	mov	QWORD PTR _Ptr$GSCopy$[rsp], rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	QWORD PTR _Bytes$GSCopy$[rsp], rdx
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN2@Deallocate

; 243  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 244  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 245  :     if (_STD is_constant_evaluated()) {
; 246  :         ::operator delete(_Ptr);
; 247  :     } else
; 248  : #endif // _HAS_CXX20
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization
; 252  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$GSCopy$[rsp]
	lea	rcx, QWORD PTR _Ptr$GSCopy$[rsp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
	mov	rdi, QWORD PTR _Ptr$GSCopy$[rsp]
	mov	rbx, QWORD PTR _Bytes$GSCopy$[rsp]
$LN2@Deallocate:

; 253  :         }
; 254  : #endif // defined(_M_IX86) || defined(_M_X64)
; 255  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, rbx
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete

; 256  :     }
; 257  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Al$ = 24
??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z PROC ; std::_Destroy_range<std::allocator<float> >, COMDAT
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	jmp	__CheckForDebuggerJustMyCode
??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ENDP ; std::_Destroy_range<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Al$ = 24
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned __int64> >, COMDAT
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	jmp	__CheckForDebuggerJustMyCode
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 64   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__A95B55BB_utility
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rdi]
	cmp	QWORD PTR [rbx], rax
	cmovb	rdi, rbx
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;
; 67   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 48
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 123  :         explicit __CLR_OR_THIS_CALL operator bool() const {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode
	movzx	eax, BYTE PTR [rbx+8]

; 124  :             return _Ok;
; 125  :         }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 108  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode

; 109  : #if !_HAS_EXCEPTIONS
; 110  :             const bool _Zero_uncaught_exceptions = true;
; 111  : #elif _HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 112  :             const bool _Zero_uncaught_exceptions = !_STD uncaught_exception(); // TRANSITION, ArchivedOS-12000909

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al

; 113  : #else // ^^^ _HAS_DEPRECATED_UNCAUGHT_EXCEPTION / !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION vvv
; 114  :             const bool _Zero_uncaught_exceptions = _STD uncaught_exceptions() == 0;
; 115  : #endif // !_HAS_DEPRECATED_UNCAUGHT_EXCEPTION
; 116  : 
; 117  :             if (_Zero_uncaught_exceptions) {

	jne	SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:

; 119  :             }
; 120  :         }

	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 91   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr) : _Sentry_base(_Ostr) {

$LN9:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rdx, rbx
	mov	rcx, rdi
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 92   :             if (!_Ostr.good()) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	test	al, al
	je	SHORT $LN1@sentry

; 93   :                 _Ok = false;
; 94   :                 return;
; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ

; 98   :             if (!_Tied || _Tied == &_Ostr) {

	test	rax, rax
	je	SHORT $LN4@sentry
	cmp	rax, rbx
	je	SHORT $LN4@sentry

; 100  :                 return;
; 101  :             }
; 102  : 
; 103  :             _Tied->flush();

	mov	rcx, rax
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 104  :             _Ok = _Ostr.good(); // store test only after flushing tie

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	jmp	SHORT $LN1@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

	mov	al, 1
$LN1@sentry:

; 105  :         }

	mov	BYTE PTR [rdi+8], al
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Ostr$ = 56
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 77   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode

; 78   :             const auto _Rdbuf = _Myostr.rdbuf();

	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ

; 79   :             if (_Rdbuf) {

	test	rax, rax
	je	SHORT $LN2@Sentry_bas

; 80   :                 _Rdbuf->_Unlock();

	mov	rdx, QWORD PTR [rax]
	mov	rcx, rax
	call	QWORD PTR [rdx+16]
	npad	1
$LN2@Sentry_bas:

; 81   :             }
; 82   :         }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 70   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR [rdi], rbx
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	rax, rax
	je	SHORT $LN4@Sentry_bas

; 71   :             const auto _Rdbuf = _Myostr.rdbuf();
; 72   :             if (_Rdbuf) {
; 73   :                 _Rdbuf->_Lock();

	mov	rdx, QWORD PTR [rax]
	mov	rcx, rax
	call	QWORD PTR [rdx+8]
$LN4@Sentry_bas:

; 74   :             }
; 75   :         }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_Guard$1 = 32
_Proxy$ = 40
$S8$ = 56
__$ArrayPad$ = 64
this$ = 96
_Count$ = 104
??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::_Construct_n<>, COMDAT

; 2119 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN8:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode

; 2120 :         // Dispatches between the three sized constructions.
; 2121 :         // 1-arg -> value-construction, e.g. vector(5)
; 2122 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 2123 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 2124 :         auto& _Al       = _Getal();

	mov	rcx, rbx
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rsi, rax

; 2125 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, rax
	lea	rcx, QWORD PTR $S8$[rsp]
	call	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>

; 2126 :         auto& _My_data  = _Mypair._Myval2;
; 2127 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, rbx
	lea	rdx, QWORD PTR $S8$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2128 :         if (_Count != 0) {

	test	rdi, rdi
	je	SHORT $LN2@Construct_

; 2129 :             _Buy_nonzero(_Count);

	mov	rdx, rdi
	mov	rcx, rbx
	call	?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Buy_nonzero

; 2130 :             _Tidy_guard<vector> _Guard{this};
; 2131 :             if constexpr (sizeof...(_Val) == 0) {
; 2132 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);

	mov	r8, rsi
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rbx+8]
	call	??$_Uninitialized_value_construct_n@V?$allocator@M@std@@@std@@YAPEAMPEAM_KAEAV?$allocator@M@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<float> >
	mov	QWORD PTR [rbx+16], rax

; 2133 :             } else if constexpr (sizeof...(_Val) == 1) {
; 2134 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 2135 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 2136 :             } else if constexpr (sizeof...(_Val) == 2) {
; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);
; 2138 :             } else {
; 2139 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 2140 :             }
; 2141 :             _ASAN_VECTOR_CREATE;
; 2142 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$1[rsp], 0

; 2143 :         }

	lea	rcx, QWORD PTR _Guard$1[rsp]
	call	??1?$_Tidy_guard@V?$vector@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<float,std::allocator<float> > >::~_Tidy_guard<std::vector<float,std::allocator<float> > >
$LN2@Construct_:

; 2144 : 
; 2145 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2146 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Construct_n<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Guard$1 = 32
_Proxy$ = 40
$S8$ = 56
__$ArrayPad$ = 64
this$ = 96
_Count$ = 104
?dtor$0@?0???$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Construct_n<>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Proxy$[rdx]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
?dtor$0@?0???$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Construct_n<>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z PROC ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><std::allocator<float> const &>, COMDAT

; 1381 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, r8
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??$forward@AEBV?$allocator@M@std@@@std@@YAAEBV?$allocator@M@0@AEBV10@@Z ; std::forward<std::allocator<float> const &>
	mov	rcx, rdi
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z ENDP ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><std::allocator<float> const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z
_TEXT	SEGMENT
_Guard$1 = 32
_Proxy$ = 40
$S7$ = 56
__$ArrayPad$ = 64
this$ = 144
_Count$ = 152
<_Val_0>$ = 160
<_Val_1>$ = 168
??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Construct_n<unsigned __int64 const *,unsigned __int64 const *>, COMDAT

; 2119 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN8:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r15, r9
	mov	r14, r8
	mov	rbx, rdx
	mov	rsi, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode

; 2120 :         // Dispatches between the three sized constructions.
; 2121 :         // 1-arg -> value-construction, e.g. vector(5)
; 2122 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 2123 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 2124 :         auto& _Al       = _Getal();

	mov	rcx, rsi
	call	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
	mov	rbp, rax

; 2125 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);

	mov	rdx, rax
	lea	rcx, QWORD PTR $S7$[rsp]
	call	??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>

; 2126 :         auto& _My_data  = _Mypair._Myval2;
; 2127 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, rsi
	lea	rdx, QWORD PTR $S7$[rsp]
	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 2128 :         if (_Count != 0) {

	test	rbx, rbx
	je	SHORT $LN2@Construct_

; 2129 :             _Buy_nonzero(_Count);

	mov	rdx, rbx
	mov	rcx, rsi
	call	?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_nonzero

; 2130 :             _Tidy_guard<vector> _Guard{this};
; 2131 :             if constexpr (sizeof...(_Val) == 0) {
; 2132 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);
; 2133 :             } else if constexpr (sizeof...(_Val) == 1) {
; 2134 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 2135 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 2136 :             } else if constexpr (sizeof...(_Val) == 2) {
; 2137 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	rdi, QWORD PTR [rsi+8]
	mov	rcx, r15
	call	??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z ; std::forward<unsigned __int64 const *>
	mov	rbx, QWORD PTR [rax]
	mov	rcx, r14
	call	??$forward@PEB_K@std@@YA$$QEAPEB_KAEAPEB_K@Z ; std::forward<unsigned __int64 const *>
	mov	r9, rbp
	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_copy@PEB_KPEB_KV?$allocator@_K@std@@@std@@YAPEA_KPEB_K0PEA_KAEAV?$allocator@_K@0@@Z ; std::_Uninitialized_copy<unsigned __int64 const *,unsigned __int64 const *,std::allocator<unsigned __int64> >
	mov	QWORD PTR [rsi+16], rax

; 2138 :             } else {
; 2139 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 2140 :             }
; 2141 :             _ASAN_VECTOR_CREATE;
; 2142 :             _Guard._Target = nullptr;

	mov	QWORD PTR _Guard$1[rsp], 0

; 2143 :         }

	lea	rcx, QWORD PTR _Guard$1[rsp]
	call	??1?$_Tidy_guard@V?$vector@_KV?$allocator@_K@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >::~_Tidy_guard<std::vector<unsigned __int64,std::allocator<unsigned __int64> > >
$LN2@Construct_:

; 2144 : 
; 2145 :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 2146 :     }

	lea	rcx, QWORD PTR _Proxy$[rsp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 88					; 00000058H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Construct_n<unsigned __int64 const *,unsigned __int64 const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Guard$1 = 32
_Proxy$ = 40
$S7$ = 56
__$ArrayPad$ = 64
this$ = 144
_Count$ = 152
<_Val_0>$ = 160
<_Val_1>$ = 168
?dtor$0@?0???$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z@4HA PROC ; `std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Construct_n<unsigned __int64 const *,unsigned __int64 const *>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Proxy$[rdx]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
?dtor$0@?0???$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z@4HA ENDP ; `std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Construct_n<unsigned __int64 const *,unsigned __int64 const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Convert_size@_K_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 48
??$_Convert_size@_K_K@std@@YA_K_K@Z PROC		; std::_Convert_size<unsigned __int64,unsigned __int64>, COMDAT

; 965  :     sizeof(_Unsigned_type) <= sizeof(_Size_type)) {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 966  :     // convert _Unsigned_type to _Size_type, avoiding truncation
; 967  :     _STL_INTERNAL_STATIC_ASSERT(_Unsigned_type(-1) > 0);
; 968  :     _STL_INTERNAL_STATIC_ASSERT(_Size_type(-1) > 0);
; 969  : 
; 970  :     if constexpr (sizeof(_Unsigned_type) > sizeof(_Size_type)) {
; 971  :         if (_Len > (numeric_limits<_Size_type>::max)()) {
; 972  :             _Xlength_error("size is too long for _Size_type");
; 973  :         }
; 974  :     }
; 975  : 
; 976  :     return static_cast<_Size_type>(_Len);
; 977  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Convert_size@_K_K@std@@YA_K_K@Z ENDP		; std::_Convert_size<unsigned __int64,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z PROC ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1><std::allocator<unsigned __int64> const &>, COMDAT

; 1381 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, r8
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??$forward@AEBV?$allocator@_K@std@@@std@@YAAEBV?$allocator@_K@0@AEBV10@@Z ; std::forward<std::allocator<unsigned __int64> const &>
	mov	rcx, rdi
	call	??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<unsigned __int64> >::_Vector_val<std::_Simple_types<unsigned __int64> >
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z ENDP ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1><std::allocator<unsigned __int64> const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 992  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rdx, rbx
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+48]

; 993  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 994  :     using _Ty = typename _Alloc::value_type;
; 995  :     _Ptr->~_Ty();
; 996  :     _Deallocate_plain(_Al, _Ptr);
; 997  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 48
_New_val$ = 56
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 651  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__A95B55BB_utility
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdi]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], rdx

; 652  :     // assign _New_val to _Val, return previous _Val
; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 654  :     _Val         = static_cast<_Other&&>(_New_val);
; 655  :     return _Old_val;
; 656  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>, COMDAT

; 823  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 833  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax

; 834  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 835  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Ostr$ = 48
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 1005 :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]
	mov	dl, 10
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
	movzx	edx, al
	mov	rcx, rbx
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
	mov	rcx, rbx
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, rbx

; 1006 :     _Ostr.put(_Ostr.widen('\n'));
; 1007 :     _Ostr.flush();
; 1008 :     return _Ostr;
; 1009 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
$T3 = 136
$T4 = 136
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 761  : basic_ostream<char, _Traits>& operator<<(basic_ostream<char, _Traits>& _Ostr, const char* _Val) {

$LN40:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	r12, rdx
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__7B331E11_ostream
	call	__CheckForDebuggerJustMyCode

; 762  :     // insert NTBS into char stream
; 763  :     using _Elem = char;
; 764  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 765  : 
; 766  :     ios_base::iostate _State = ios_base::goodbit;

	xor	edi, edi
	mov	DWORD PTR _State$[rsp], edi

; 767  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

	mov	rcx, r12
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	r15, rax

; 768  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

	mov	r8, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [r8+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rcx, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, r15
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	mov	rsi, rax
	sub	rsi, r15
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	rsi, rdi
$LN18@operator:

; 769  :     const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, rbx
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 770  : 
; 771  :     if (!_Ok) {

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	test	al, al
	jne	SHORT $LN8@operator

; 772  :         _State |= ios_base::badbit;

	mov	edi, 4

; 773  :     } else { // state okay, insert

	jmp	$LN22@operator
$LN8@operator:

; 774  :         _TRY_IO_BEGIN
; 775  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN31@operator
$LL4@operator:

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	test	rsi, rsi
	jle	SHORT $LN31@operator

; 777  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	movzx	r14d, al
	mov	rcx, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	movzx	edx, r14b
	mov	rcx, rax
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR $T4[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T2[rsp], eax
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	test	al, al
	je	SHORT $LN2@operator

; 778  :                     _State |= ios_base::badbit; // insertion failed, quit

	mov	edi, 4

; 779  :                     break;

	jmp	$LN37@operator
$LN2@operator:

; 776  :             for (; 0 < _Pad; --_Pad) { // pad on left

	dec	rsi
	jmp	SHORT $LL4@operator
$LN31@operator:

; 780  :                 }
; 781  :             }
; 782  :         }
; 783  : 
; 784  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	r8, r15
	mov	rdx, r12
	mov	rcx, rax
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r15
	jne	SHORT $LN36@operator
$LL34@operator:

; 785  :             _State |= ios_base::badbit;
; 786  :         }
; 787  : 
; 788  :         if (_State == ios_base::goodbit) {
; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	test	rsi, rsi
	jle	SHORT $LN6@operator

; 790  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	movzx	r14d, al
	mov	rcx, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rbx
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	movzx	edx, r14b
	mov	rcx, rax
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR $T3[rsp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[rsp], eax
	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	test	al, al
	jne	SHORT $LN36@operator

; 785  :             _State |= ios_base::badbit;
; 786  :         }
; 787  : 
; 788  :         if (_State == ios_base::goodbit) {
; 789  :             for (; 0 < _Pad; --_Pad) { // pad on right

	dec	rsi
	jmp	SHORT $LL34@operator
$LN36@operator:

; 791  :                     _State |= ios_base::badbit; // insertion failed, quit
; 792  :                     break;
; 793  :                 }
; 794  :             }
; 795  :         }
; 796  : 
; 797  :         _Ostr.width(0);

	or	edi, 4
$LN37@operator:
	mov	DWORD PTR _State$[rsp], edi
$LN6@operator:
	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	xor	edx, edx
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN22@operator
$LN23@operator:
	mov	rbx, QWORD PTR _Ostr$[rsp]
	mov	edi, DWORD PTR _State$[rsp]
$LN22@operator:

; 798  :         _CATCH_IO_(ios_base, _Ostr)
; 799  :     }
; 800  : 
; 801  :     _Ostr.setstate(_State);

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	xor	r8d, r8d
	mov	edx, edi
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1

; 802  :     return _Ostr;

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, rbx

; 803  : }

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
$T3 = 136
$T4 = 136
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
$T3 = 136
$T4 = 136
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 798  :         _CATCH_IO_(ios_base, _Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	mov	rax, 0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\initializer_list
;	COMDAT ?size@?$initializer_list@_K@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
?size@?$initializer_list@_K@std@@QEBA_KXZ PROC		; std::initializer_list<unsigned __int64>::size, COMDAT

; 45   :     _NODISCARD constexpr size_t size() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__D7870C25_initializer_list
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx+8]
	sub	rax, QWORD PTR [rbx]
	sar	rax, 3

; 46   :         return static_cast<size_t>(_Last - _First);
; 47   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?size@?$initializer_list@_K@std@@QEBA_KXZ ENDP		; std::initializer_list<unsigned __int64>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\initializer_list
;	COMDAT ?end@?$initializer_list@_K@std@@QEBAPEB_KXZ
_TEXT	SEGMENT
this$ = 48
?end@?$initializer_list@_K@std@@QEBAPEB_KXZ PROC	; std::initializer_list<unsigned __int64>::end, COMDAT

; 41   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__D7870C25_initializer_list
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx+8]

; 42   :         return _Last;
; 43   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?end@?$initializer_list@_K@std@@QEBAPEB_KXZ ENDP	; std::initializer_list<unsigned __int64>::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\initializer_list
;	COMDAT ?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ
_TEXT	SEGMENT
this$ = 48
?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ PROC	; std::initializer_list<unsigned __int64>::begin, COMDAT

; 37   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__D7870C25_initializer_list
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx]

; 38   :         return _First;
; 39   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ ENDP	; std::initializer_list<unsigned __int64>::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\initializer_list
;	COMDAT ??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z
_TEXT	SEGMENT
this$ = 48
_First_arg$ = 56
_Last_arg$ = 64
??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z PROC	; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>, COMDAT

; 35   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rsi, r8
	lea	rcx, OFFSET FLAT:__D7870C25_initializer_list
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR [rdi], rbx
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+8], rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z ENDP	; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$ = 16
?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::__autoclassinit2, COMDAT
	mov	r8, rdx
	xor	edx, edx
	jmp	memset
?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first, COMDAT

; 1387 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1388 :         return *this;
; 1389 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first, COMDAT

; 1383 :     constexpr _Ty1& _Get_first() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1384 :         return *this;
; 1385 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned __int64> >::_Vector_val<std::_Simple_types<unsigned __int64> >, COMDAT

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	mov	QWORD PTR [rbx+24], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Vector_val@U?$_Simple_types@_K@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned __int64> >::_Vector_val<std::_Simple_types<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal, COMDAT

; 2247 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 2248 :         return _Mypair._Get_first();
; 2249 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEBAAEBV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal, COMDAT

; 2243 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 2244 :         return _Mypair._Get_first();
; 2245 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Xlength, COMDAT

; 2200 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
	int	3
$LN3@Xlength:
?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy, COMDAT

; 2098 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
	mov	rcx, rbx
	mov	rdi, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2099 :         auto& _Al         = _Getal();
; 2100 :         auto& _My_data    = _Mypair._Myval2;
; 2101 :         pointer& _Myfirst = _My_data._Myfirst;
; 2102 :         pointer& _Mylast  = _My_data._Mylast;
; 2103 :         pointer& _Myend   = _My_data._Myend;
; 2104 : 
; 2105 :         _My_data._Orphan_all();
; 2106 : 
; 2107 :         if (_Myfirst) { // destroy and deallocate old array
; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+16]
	mov	r8, rdi
	call	??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ; std::_Destroy_range<std::allocator<unsigned __int64> >

; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, rdi
	mov	r8, QWORD PTR [rbx+24]
	sub	r8, rdx
	sar	r8, 3
	call	?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z ; std::allocator<unsigned __int64>::deallocate

; 2111 : 
; 2112 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax

; 2113 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rax

; 2114 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rax
$LN2@Tidy:

; 2115 :         }
; 2116 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_nonzero, COMDAT

; 2058 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rdi
	call	?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::max_size
	cmp	rbx, rax
	ja	SHORT $LN6@Buy_nonzer

; 2071 :         }
; 2072 : 
; 2073 :         _Buy_raw(_Newcapacity);

	mov	rdx, rbx
	mov	rcx, rdi

; 2074 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 2071 :         }
; 2072 : 
; 2073 :         _Buy_raw(_Newcapacity);

	jmp	?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_raw
$LN6@Buy_nonzer:

; 2059 :         // allocate array with _Newcapacity elements
; 2060 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 2061 :         auto& _My_data    = _Mypair._Myval2;
; 2062 :         pointer& _Myfirst = _My_data._Myfirst;
; 2063 :         pointer& _Mylast  = _My_data._Mylast;
; 2064 :         pointer& _Myend   = _My_data._Myend;
; 2065 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 2066 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 2067 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 2068 : 
; 2069 :         if (_Newcapacity > max_size()) {
; 2070 :             _Xlength();

	call	?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Xlength
	int	3
$LN4@Buy_nonzer:
?_Buy_nonzero@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_raw, COMDAT

; 2042 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rdi
	call	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
	mov	rcx, rax
	mov	rdx, rbx
	call	?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z ; std::allocator<unsigned __int64>::allocate
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi+16], rax
	lea	rax, QWORD PTR [rax+rbx*8]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+24], rax

; 2043 :         // allocate array with _Newcapacity elements
; 2044 :         auto& _My_data    = _Mypair._Myval2;
; 2045 :         pointer& _Myfirst = _My_data._Myfirst;
; 2046 :         pointer& _Mylast  = _My_data._Mylast;
; 2047 :         pointer& _Myend   = _My_data._Myend;
; 2048 : 
; 2049 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 2050 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 2051 : 
; 2052 :         const auto _Newvec = _Getal().allocate(_Newcapacity);
; 2053 :         _Myfirst           = _Newvec;
; 2054 :         _Mylast            = _Newvec;
; 2055 :         _Myend             = _Newvec + _Newcapacity;
; 2056 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
$T1 = 56
$T2 = 64
?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::max_size, COMDAT

; 1935 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEBAAEBV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	lea	rdx, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1936 :         return (_STD min)(
; 1937 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1938 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?max_size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_end, COMDAT

; 1917 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_end() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx+16]

; 1918 :         return _Mypair._Myval2._Mylast;
; 1919 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_begin, COMDAT

; 1909 :     _NODISCARD _CONSTEXPR20 pointer _Unchecked_begin() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx+8]

; 1910 :         return _Mypair._Myval2._Myfirst;
; 1911 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$S1$ = 40
__$ArrayPad$ = 48
this$ = 80
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >, COMDAT

; 829  :     _CONSTEXPR20 ~vector() noexcept {

$LN5:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
	mov	rcx, rbx
	call	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rsp]
	call	??$?0_K@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned __int64>
	lea	rdx, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T1[rsp], 0
	mov	rcx, rbx
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 830  :         _Tidy();
; 831  : #if _ITERATOR_DEBUG_LEVEL != 0
; 832  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 833  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 834  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 835  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
this$ = 48
_Ilist$ = 56
_Al$ = 64
$T3 = 72
??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::vector<unsigned __int64,std::allocator<unsigned __int64> >, COMDAT

; 720  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN4:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, r8
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	mov	rdi, rdx
	call	__CheckForDebuggerJustMyCode
	movzx	edx, BYTE PTR $T2[rsp]
	mov	r8, rbx
	mov	rcx, rsi
	call	??$?0AEBV?$allocator@_K@std@@$$V@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_K@1@@Z ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1><std::allocator<unsigned __int64> const &>
	mov	rcx, rdi
	call	?end@?$initializer_list@_K@std@@QEBAPEB_KXZ ; std::initializer_list<unsigned __int64>::end
	mov	rcx, rdi
	mov	QWORD PTR $T1[rsp], rax
	call	?begin@?$initializer_list@_K@std@@QEBAPEB_KXZ ; std::initializer_list<unsigned __int64>::begin
	mov	rcx, rdi
	mov	QWORD PTR $T3[rsp], rax
	call	?size@?$initializer_list@_K@std@@QEBA_KXZ ; std::initializer_list<unsigned __int64>::size
	mov	rcx, rax
	call	??$_Convert_size@_K_K@std@@YA_K_K@Z	; std::_Convert_size<unsigned __int64,unsigned __int64>
	mov	rdx, rax
	lea	r9, QWORD PTR $T1[rsp]
	lea	r8, QWORD PTR $T3[rsp]
	mov	rcx, rsi
	call	??$_Construct_n@PEB_KPEB_K@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_K$$QEAPEB_K1@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Construct_n<unsigned __int64 const *,unsigned __int64 const *>
	mov	rbx, QWORD PTR [rsp+56]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+64]

; 721  :         _Construct_n(_Convert_size<size_type>(_Ilist.size()), _Ilist.begin(), _Ilist.end());
; 722  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::vector<unsigned __int64,std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z
_TEXT	SEGMENT
__formal$ = 48
?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN5:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);
; 695  :     }

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SA_KAEBV?$allocator@_K@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z PROC	; std::allocator<unsigned __int64>::allocate, COMDAT

; 833  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax

; 834  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 835  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z ENDP	; std::allocator<unsigned __int64>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z PROC	; std::allocator<unsigned __int64>::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN14:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, r8
	mov	rdi, rdx
	call	__CheckForDebuggerJustMyCode
	test	rdi, rdi
	jne	SHORT $LN6@deallocate

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	test	rbx, rbx
	je	SHORT $LN6@deallocate
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, OFFSET FLAT:??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	r8d, 828				; 0000033cH
	lea	ecx, QWORD PTR [rdi+2]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	mov	r9d, 828				; 0000033cH
	mov	QWORD PTR [rsp+32], 0
	lea	r8, OFFSET FLAT:??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
$LN6@deallocate:

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rbx*8]
	mov	rcx, rdi

; 831  :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z ENDP	; std::allocator<unsigned __int64>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??0?$allocator@_K@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$allocator@_K@std@@QEAA@XZ PROC			; std::allocator<unsigned __int64>::allocator<unsigned __int64>, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$allocator@_K@std@@QEAA@XZ ENDP			; std::allocator<unsigned __int64>::allocator<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\paniw\Desktop\Peiravani_dotProduct\Peiravani_dotProduct\Peiravani_dotProduct\dotProduct.cpp
;	COMDAT main
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 160
$T4 = 176
freq$ = 192
ctr_2$ = 200
ctr_1$ = 208
sizes$ = 216
__$ArrayPad$ = 248
main	PROC						; COMDAT

; 14   : int main() {

$LN29:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	push	rbp
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-88]
	sub	rsp, 320				; 00000140H
	vmovaps	XMMWORD PTR [rax-40], xmm6
	vmovaps	XMMWORD PTR [rax-56], xmm7
	vmovaps	XMMWORD PTR [rax-72], xmm8
	vmovaps	XMMWORD PTR [rax-88], xmm9
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	lea	rcx, OFFSET FLAT:__6229CAFC_dotProduct@cpp
	call	__CheckForDebuggerJustMyCode

; 15   :     _int64 ctr_1 = 0, ctr_2 = 0, freq = 0;

	mov	QWORD PTR ctr_1$[rbp-256], 0
	mov	QWORD PTR ctr_2$[rbp-256], 0
	mov	QWORD PTR freq$[rbp-256], 0
	vxorpd	xmm9, xmm9, xmm9
	xor	ebx, ebx
	xor	edi, edi
	vmovsd	xmm7, QWORD PTR __real@3fe0000000000000
	vmovsd	xmm8, QWORD PTR __real@4008000000000000
	npad	2
$LL4@main:
	vxorps	xmm6, xmm6, xmm6

; 21   :         A[n] = n / 2.0;

	vcvtsi2sd xmm6, xmm6, ebx
	mov	rdx, rdi
	lea	rcx, OFFSET FLAT:?A@@3V?$vector@MV?$allocator@M@std@@@std@@A ; A
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	vmulsd	xmm0, xmm6, xmm7
	vcvtsd2ss xmm1, xmm0, xmm0
	vmovss	DWORD PTR [rax], xmm1

; 22   :         B[n] = n / 3.0;

	mov	rdx, rdi
	lea	rcx, OFFSET FLAT:?B@@3V?$vector@MV?$allocator@M@std@@@std@@A ; B
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	vdivsd	xmm0, xmm6, xmm8
	vcvtsd2ss xmm1, xmm0, xmm0
	vmovss	DWORD PTR [rax], xmm1

; 16   :     int acc = 0, n = 0, d_prod = 0;
; 17   :     double total_time = 0;
; 18   : 
; 19   :     // Initialize the values of A and B
; 20   :     for (int n = 0; n < max_arr_size; n++) {

	inc	ebx
	inc	rdi
	cmp	ebx, 65536				; 00010000H
	jl	SHORT $LL4@main

; 23   :     }
; 24   : 
; 25   :     // Define the vector of sizes as powers of 2
; 26   :     //                      2^4                                                               2^16
; 27   :     vector<size_t> sizes = { 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536 };

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR sizes$[rbp-256]
	call	?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
	mov	QWORD PTR $T2[rsp], 16
	mov	QWORD PTR $T2[rsp+8], 32		; 00000020H
	mov	QWORD PTR $T2[rsp+16], 64		; 00000040H
	mov	QWORD PTR $T2[rsp+24], 128		; 00000080H
	mov	QWORD PTR $T2[rsp+32], 256		; 00000100H
	mov	QWORD PTR $T2[rsp+40], 512		; 00000200H
	mov	QWORD PTR $T2[rsp+48], 1024		; 00000400H
	mov	QWORD PTR $T2[rsp+56], 2048		; 00000800H
	mov	QWORD PTR $T2[rsp+64], 4096		; 00001000H
	mov	QWORD PTR $T2[rsp+72], 8192		; 00002000H
	mov	QWORD PTR $T2[rbp-176], 16384		; 00004000H
	mov	QWORD PTR $T2[rbp-168], 32768		; 00008000H
	mov	QWORD PTR $T2[rbp-160], 65536		; 00010000H
	lea	r8, QWORD PTR $T2[rbp-152]
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T4[rbp-256]
	call	??0?$initializer_list@_K@std@@QEAA@PEB_K0@Z ; std::initializer_list<unsigned __int64>::initializer_list<unsigned __int64>
	vmovups	xmm0, XMMWORD PTR [rax]
	vmovups	XMMWORD PTR $T3[rbp-256], xmm0
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$allocator@_K@std@@QEAA@XZ		; std::allocator<unsigned __int64>::allocator<unsigned __int64>
	mov	r8, rax
	lea	rdx, QWORD PTR $T3[rbp-256]
	lea	rcx, QWORD PTR sizes$[rbp-256]
	call	??0?$vector@_KV?$allocator@_K@std@@@std@@QEAA@V?$initializer_list@_K@1@AEBV?$allocator@_K@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::vector<unsigned __int64,std::allocator<unsigned __int64> >
	npad	1

; 28   : 
; 29   :     // print array size
; 30   :     for (size_t size : sizes) {

	lea	rcx, QWORD PTR sizes$[rbp-256]
	call	?_Unchecked_begin@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_begin
	mov	rsi, rax
	lea	rcx, QWORD PTR sizes$[rbp-256]
	call	?_Unchecked_end@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Unchecked_end
	mov	r15, rax
	cmp	rsi, rax
	je	$LN6@main
	vmovsd	xmm7, QWORD PTR __real@4024000000000000
	npad	5
$LL7@main:
	mov	r14, QWORD PTR [rsi]

; 31   :         cout << "Vector size: " << size << endl;

	lea	rdx, OFFSET FLAT:??_C@_0O@FDAAJLA@Vector?5size?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	rdx, r14
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 28   : 
; 29   :     // print array size
; 30   :     for (size_t size : sizes) {

	xor	edi, edi
$LL10@main:

; 35   :             // Start timing the code
; 36   :             if (QueryPerformanceCounter((LARGE_INTEGER*)&ctr_1) != 0) {

	lea	rcx, QWORD PTR ctr_1$[rbp-256]
	call	QWORD PTR __imp_QueryPerformanceCounter
	test	eax, eax
	je	$LN11@main

; 37   :                 // Call the dotProduct function
; 38   :                 d_prod = dotProduct(&A[0], &B[0], size);

	xor	edx, edx
	lea	rcx, OFFSET FLAT:?B@@3V?$vector@MV?$allocator@M@std@@@std@@A ; B
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	mov	rbx, rax
	xor	edx, edx
	lea	rcx, OFFSET FLAT:?A@@3V?$vector@MV?$allocator@M@std@@@std@@A ; A
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	mov	rcx, rax
	mov	r8d, r14d
	mov	rdx, rbx
	call	?dotProduct@@YAMPEAM0H@Z		; dotProduct

; 39   : 
; 40   :                 // Finish timing the code.
; 41   :                 QueryPerformanceCounter((LARGE_INTEGER*)&ctr_2);

	lea	rcx, QWORD PTR ctr_2$[rbp-256]
	call	QWORD PTR __imp_QueryPerformanceCounter

; 42   : 
; 43   :                 // Get the performance counter frequency
; 44   :                 QueryPerformanceFrequency((LARGE_INTEGER*)&freq);

	lea	rcx, QWORD PTR freq$[rbp-256]
	call	QWORD PTR __imp_QueryPerformanceFrequency

; 45   : 
; 46   :                 // min resolution
; 47   :                 cout << "QueryPerformance min resolution: 1/" << freq << " seconds" << endl;

	lea	rdx, OFFSET FLAT:??_C@_0CE@NFIFCEPN@QueryPerformance?5min?5resolution@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	rdx, QWORD PTR freq$[rbp-256]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_08GFGBMIFC@?5seconds@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 48   : 
; 49   :                 // Calculate the exectution time in seconds
; 50   :                 cout << "Run number: " << i + 1 << endl << "Running time: " << (ctr_2 - ctr_1) * 1.0 / freq << " seconds" << endl;

	inc	edi
	mov	rax, QWORD PTR ctr_2$[rbp-256]
	sub	rax, QWORD PTR ctr_1$[rbp-256]
	vxorps	xmm1, xmm1, xmm1
	vcvtsi2sd xmm1, xmm1, rax
	vxorps	xmm0, xmm0, xmm0
	vcvtsi2sd xmm0, xmm0, QWORD PTR freq$[rbp-256]
	vdivsd	xmm6, xmm1, xmm0
	lea	rdx, OFFSET FLAT:??_C@_0N@JLJLOBDF@Run?5number?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, edi
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0P@JGLEFFKN@Running?5time?3?5@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	vmovaps	xmm1, xmm6
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_08GFGBMIFC@?5seconds@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 51   :                 total_time += (ctr_2 - ctr_1) * 1.0 / freq;

	mov	rax, QWORD PTR ctr_2$[rbp-256]
	sub	rax, QWORD PTR ctr_1$[rbp-256]
	vxorps	xmm1, xmm1, xmm1
	vcvtsi2sd xmm1, xmm1, rax
	vxorps	xmm0, xmm0, xmm0
	vcvtsi2sd xmm0, xmm0, QWORD PTR freq$[rbp-256]
	vdivsd	xmm1, xmm1, xmm0
	vaddsd	xmm9, xmm9, xmm1

; 52   : 
; 53   :             }

	jmp	SHORT $LN8@main
$LN11@main:

; 54   :             else {
; 55   :                 DWORD dwError = GetLastError();

	call	QWORD PTR __imp_GetLastError
	mov	ebx, eax

; 56   :                 cout << "Error value: " << dwError << endl;

	lea	rdx, OFFSET FLAT:??_C@_0O@PDJMEAPF@Error?5value?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@K@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	inc	edi
$LN8@main:

; 32   : 
; 33   :         // Run the dotProduct function 10 times for each size and calculate time
; 34   :         for (int i = 0; i < 10; i++) {

	cmp	edi, 10
	jl	$LL10@main

; 57   :             }
; 58   :         }
; 59   : 
; 60   :         // Print the average time for the current size
; 61   :         cout << "Average time: " << (total_time / 10) << endl;

	vdivsd	xmm6, xmm9, xmm7
	lea	rdx, OFFSET FLAT:??_C@_0P@DJDBHIJH@Average?5time?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	vmovaps	xmm1, xmm6
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 62   :         cout << "TotalTime: " << total_time << endl << endl;

	lea	rdx, OFFSET FLAT:??_C@_0M@GCMGFMPD@TotalTime?3?5@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	vmovaps	xmm1, xmm9
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 63   :         cout << "---------------------------------------" << endl;

	lea	rdx, OFFSET FLAT:??_C@_0CI@OLPOAAPL@?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 28   : 
; 29   :     // print array size
; 30   :     for (size_t size : sizes) {

	add	rsi, 8
	cmp	rsi, r15
	jne	$LL7@main
$LN6@main:

; 64   :     }
; 65   : 
; 66   :     system("pause");

	lea	rcx, OFFSET FLAT:??_C@_05PDJBBECF@pause@
	call	QWORD PTR __imp_system
	npad	1

; 67   :     return 0;

	lea	rcx, QWORD PTR sizes$[rbp-256]
	call	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
	xor	eax, eax

; 68   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+320]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rdi, QWORD PTR [r11+48]
	vmovaps	xmm6, XMMWORD PTR [r11-16]
	vmovaps	xmm7, XMMWORD PTR [r11-32]
	vmovaps	xmm8, XMMWORD PTR [r11-48]
	vmovaps	xmm9, XMMWORD PTR [r11-64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rbp
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 160
$T4 = 176
freq$ = 192
ctr_2$ = 200
ctr_1$ = 208
sizes$ = 216
__$ArrayPad$ = 248
main$dtor$0 PROC
	lea	rcx, QWORD PTR sizes$[rdx]
	jmp	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__FB@@YAXXZ
text$yd	SEGMENT
??__FB@@YAXXZ PROC					; `dynamic atexit destructor for 'B'', COMDAT
	lea	rcx, OFFSET FLAT:?B@@3V?$vector@MV?$allocator@M@std@@@std@@A ; B
	jmp	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
??__FB@@YAXXZ ENDP					; `dynamic atexit destructor for 'B''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\paniw\Desktop\Peiravani_dotProduct\Peiravani_dotProduct\Peiravani_dotProduct\dotProduct.cpp
;	COMDAT ??__EB@@YAXXZ
text$di	SEGMENT
$T1 = 48
??__EB@@YAXXZ PROC					; `dynamic initializer for 'B'', COMDAT

; 10   : vector<float> B(max_arr_size); // Vector B

	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__6229CAFC_dotProduct@cpp
	call	__CheckForDebuggerJustMyCode
	mov	edx, 32					; 00000020H
	lea	rcx, OFFSET FLAT:?B@@3V?$vector@MV?$allocator@M@std@@@std@@A ; B
	call	?__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$allocator@M@std@@QEAA@XZ		; std::allocator<float>::allocator<float>
	mov	r8, rax
	lea	rcx, OFFSET FLAT:?B@@3V?$vector@MV?$allocator@M@std@@@std@@A ; B
	mov	edx, 65536				; 00010000H
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	lea	rcx, OFFSET FLAT:??__FB@@YAXXZ		; `dynamic atexit destructor for 'B''
	add	rsp, 40					; 00000028H
	jmp	atexit
??__EB@@YAXXZ ENDP					; `dynamic initializer for 'B''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__FA@@YAXXZ
text$yd	SEGMENT
??__FA@@YAXXZ PROC					; `dynamic atexit destructor for 'A'', COMDAT
	lea	rcx, OFFSET FLAT:?A@@3V?$vector@MV?$allocator@M@std@@@std@@A ; A
	jmp	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
??__FA@@YAXXZ ENDP					; `dynamic atexit destructor for 'A''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\paniw\Desktop\Peiravani_dotProduct\Peiravani_dotProduct\Peiravani_dotProduct\dotProduct.cpp
;	COMDAT ??__EA@@YAXXZ
text$di	SEGMENT
$T1 = 48
??__EA@@YAXXZ PROC					; `dynamic initializer for 'A'', COMDAT

; 9    : vector<float> A(max_arr_size); // Vector A

	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__6229CAFC_dotProduct@cpp
	call	__CheckForDebuggerJustMyCode
	mov	edx, 32					; 00000020H
	lea	rcx, OFFSET FLAT:?A@@3V?$vector@MV?$allocator@M@std@@@std@@A ; A
	call	?__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$allocator@M@std@@QEAA@XZ		; std::allocator<float>::allocator<float>
	mov	r8, rax
	lea	rcx, OFFSET FLAT:?A@@3V?$vector@MV?$allocator@M@std@@@std@@A ; A
	mov	edx, 65536				; 00010000H
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	lea	rcx, OFFSET FLAT:??__FA@@YAXXZ		; `dynamic atexit destructor for 'A''
	add	rsp, 40					; 00000028H
	jmp	atexit
??__EA@@YAXXZ ENDP					; `dynamic initializer for 'A''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$ = 16
?__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::__autoclassinit2, COMDAT
	mov	r8, rdx
	xor	edx, edx
	jmp	memset
?__autoclassinit2@?$vector@MV?$allocator@M@std@@@std@@QEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ PROC ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 1387 :     constexpr const _Ty1& _Get_first() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1388 :         return *this;
; 1389 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ ENDP ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ PROC ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 1383 :     constexpr _Ty1& _Get_first() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 1384 :         return *this;
; 1385 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ ENDP ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >, COMDAT

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax
	mov	QWORD PTR [rbx+16], rax
	mov	QWORD PTR [rbx+24], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ PROC ; std::vector<float,std::allocator<float> >::_Getal, COMDAT

; 2247 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 2248 :         return _Mypair._Get_first();
; 2249 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ ENDP ; std::vector<float,std::allocator<float> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ PROC ; std::vector<float,std::allocator<float> >::_Getal, COMDAT

; 2243 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 2244 :         return _Mypair._Get_first();
; 2245 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Get_first@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$allocator@M@2@XZ ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ENDP ; std::vector<float,std::allocator<float> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ PROC ; std::vector<float,std::allocator<float> >::_Xlength, COMDAT

; 2200 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
	int	3
$LN3@Xlength:
?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ ENDP ; std::vector<float,std::allocator<float> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ PROC	; std::vector<float,std::allocator<float> >::_Tidy, COMDAT

; 2098 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rcx, rbx
	mov	rdi, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2099 :         auto& _Al         = _Getal();
; 2100 :         auto& _My_data    = _Mypair._Myval2;
; 2101 :         pointer& _Myfirst = _My_data._Myfirst;
; 2102 :         pointer& _Mylast  = _My_data._Mylast;
; 2103 :         pointer& _Myend   = _My_data._Myend;
; 2104 : 
; 2105 :         _My_data._Orphan_all();
; 2106 : 
; 2107 :         if (_Myfirst) { // destroy and deallocate old array
; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+16]
	mov	r8, rdi
	call	??$_Destroy_range@V?$allocator@M@std@@@std@@YAXPEAMQEAMAEAV?$allocator@M@0@@Z ; std::_Destroy_range<std::allocator<float> >

; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+8]
	mov	rcx, rdi
	mov	r8, QWORD PTR [rbx+24]
	sub	r8, rdx
	sar	r8, 2
	call	?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z ; std::allocator<float>::deallocate

; 2111 : 
; 2112 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax

; 2113 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rax

; 2114 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rax
$LN2@Tidy:

; 2115 :         }
; 2116 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ENDP	; std::vector<float,std::allocator<float> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::_Buy_nonzero, COMDAT

; 2058 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rdi
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
	cmp	rbx, rax
	ja	SHORT $LN6@Buy_nonzer

; 2071 :         }
; 2072 : 
; 2073 :         _Buy_raw(_Newcapacity);

	mov	rdx, rbx
	mov	rcx, rdi

; 2074 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 2071 :         }
; 2072 : 
; 2073 :         _Buy_raw(_Newcapacity);

	jmp	?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Buy_raw
$LN6@Buy_nonzer:

; 2059 :         // allocate array with _Newcapacity elements
; 2060 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 2061 :         auto& _My_data    = _Mypair._Myval2;
; 2062 :         pointer& _Myfirst = _My_data._Myfirst;
; 2063 :         pointer& _Mylast  = _My_data._Mylast;
; 2064 :         pointer& _Myend   = _My_data._Myend;
; 2065 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 2066 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 2067 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 2068 : 
; 2069 :         if (_Newcapacity > max_size()) {
; 2070 :             _Xlength();

	call	?_Xlength@?$vector@MV?$allocator@M@std@@@std@@CAXXZ ; std::vector<float,std::allocator<float> >::_Xlength
	int	3
$LN4@Buy_nonzer:
?_Buy_nonzero@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::_Buy_raw, COMDAT

; 2042 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rdi
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rcx, rax
	mov	rdx, rbx
	call	?allocate@?$allocator@M@std@@QEAAPEAM_K@Z ; std::allocator<float>::allocate
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi+16], rax
	lea	rax, QWORD PTR [rax+rbx*4]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+24], rax

; 2043 :         // allocate array with _Newcapacity elements
; 2044 :         auto& _My_data    = _Mypair._Myval2;
; 2045 :         pointer& _Myfirst = _My_data._Myfirst;
; 2046 :         pointer& _Mylast  = _My_data._Mylast;
; 2047 :         pointer& _Myend   = _My_data._Myend;
; 2048 : 
; 2049 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 2050 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 2051 : 
; 2052 :         const auto _Newvec = _Getal().allocate(_Newcapacity);
; 2053 :         _Myfirst           = _Newvec;
; 2054 :         _Mylast            = _Newvec;
; 2055 :         _Myend             = _Newvec + _Newcapacity;
; 2056 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
_TEXT	SEGMENT
this$ = 64
_Pos$ = 72
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z PROC ; std::vector<float,std::allocator<float> >::operator[], COMDAT

; 1945 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

$LN14:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
	mov	rdi, rdx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR [rbx+16]
	sub	rax, QWORD PTR [rbx+8]
	sar	rax, 2
	cmp	rdi, rax
	jb	SHORT $LN6@operator

; 1946 :         auto& _My_data = _Mypair._Myval2;
; 1947 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1948 :         _STL_VERIFY(

	xor	r9d, r9d
	lea	rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, OFFSET FLAT:??_C@_0GB@OIADIBJN@C?3?2Program?5Files?2Microsoft?5Visu@
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	r8d, 1949				; 0000079dH
	mov	QWORD PTR [rsp+32], rax
	lea	ecx, QWORD PTR [r9+2]
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	mov	r9d, 1949				; 0000079dH
	mov	QWORD PTR [rsp+32], 0
	lea	r8, OFFSET FLAT:??_C@_1MC@JGAHOMKA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	QWORD PTR __imp__invalid_parameter
$LN6@operator:

; 1949 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1950 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1951 : 
; 1952 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+8]

; 1953 :     }

	mov	rbx, QWORD PTR [rsp+64]
	lea	rax, QWORD PTR [rax+rdi*4]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ENDP ; std::vector<float,std::allocator<float> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
$T1 = 56
$T2 = 64
?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC ; std::vector<float,std::allocator<float> >::max_size, COMDAT

; 1935 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEBAAEBV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ; std::_Default_allocator_traits<std::allocator<float> >::max_size
	mov	QWORD PTR $T1[rsp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	lea	rdx, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]

; 1936 :         return (_STD min)(
; 1937 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1938 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP ; std::vector<float,std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$S2$ = 40
__$ArrayPad$ = 48
this$ = 80
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >, COMDAT

; 829  :     _CONSTEXPR20 ~vector() noexcept {

$LN5:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@AEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
	mov	rcx, rbx
	call	?_Getal@?$vector@MV?$allocator@M@std@@@std@@AEAAAEAV?$allocator@M@2@XZ ; std::vector<float,std::allocator<float> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rsp]
	call	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
	lea	rdx, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T1[rsp], 0
	mov	rcx, rbx
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rsp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 830  :         _Tidy();
; 831  : #if _ITERATOR_DEBUG_LEVEL != 0
; 832  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 833  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 834  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 835  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vector
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 48
_Count$ = 56
_Al$ = 64
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z PROC ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT

; 682  :         : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN4:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, r8
	lea	rcx, OFFSET FLAT:__FE5E3416_vector
	mov	rdi, rdx
	call	__CheckForDebuggerJustMyCode
	movzx	edx, BYTE PTR $T1[rsp]
	mov	r8, rbx
	mov	rcx, rsi
	call	??$?0AEBV?$allocator@M@std@@$$V@?$_Compressed_pair@V?$allocator@M@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@M@1@@Z ; std::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::allocator<float>,std::_Vector_val<std::_Simple_types<float> >,1><std::allocator<float> const &>
	mov	rdx, rdi
	mov	rcx, rsi
	call	??$_Construct_n@$$V@?$vector@MV?$allocator@M@std@@@std@@AEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Construct_n<>
	mov	rbx, QWORD PTR [rsp+56]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+64]

; 683  :         _Construct_n(_Count);
; 684  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@_KAEBV?$allocator@M@1@@Z ENDP ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z
_TEXT	SEGMENT
__formal$ = 48
?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<float> >::max_size, COMDAT

; 693  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

$LN5:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, 4611686018427387903		; 3fffffffffffffffH

; 694  :         return static_cast<size_t>(-1) / sizeof(value_type);
; 695  :     }

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?allocate@?$allocator@M@std@@QEAAPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@M@std@@QEAAPEAM_K@Z PROC		; std::allocator<float>::allocate, COMDAT

; 833  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??$_Get_size_of_n@$03@std@@YA_K_K@Z	; std::_Get_size_of_n<4>
	mov	rcx, rax

; 834  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 835  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 836  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@M@std@@QEAAPEAM_K@Z ENDP		; std::allocator<float>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z
_TEXT	SEGMENT
this$ = 64
_Ptr$ = 72
_Count$ = 80
?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z PROC	; std::allocator<float>::deallocate, COMDAT

; 827  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN14:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	mov	rbx, r8
	mov	rdi, rdx
	call	__CheckForDebuggerJustMyCode
	test	rdi, rdi
	jne	SHORT $LN6@deallocate

; 828  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	test	rbx, rbx
	je	SHORT $LN6@deallocate
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rax
	lea	rdx, OFFSET FLAT:??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	r8d, 828				; 0000033cH
	lea	ecx, QWORD PTR [rdi+2]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	mov	r9d, 828				; 0000033cH
	mov	QWORD PTR [rsp+32], 0
	lea	r8, OFFSET FLAT:??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
$LN6@deallocate:

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rbx*4]
	mov	rcx, rdi

; 831  :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi

; 829  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 830  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$allocator@M@std@@QEAAXQEAM_K@Z ENDP	; std::allocator<float>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??0?$allocator@M@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$allocator@M@std@@QEAA@XZ PROC			; std::allocator<float>::allocator<float>, COMDAT

; 819  :     constexpr allocator() noexcept {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$allocator@M@std@@QEAA@XZ ENDP			; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 488  :     _NODISCARD static constexpr int_type eof() noexcept {

$LN5:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__B71DB0E4_xstring
	call	__CheckForDebuggerJustMyCode
	mov	eax, -1

; 489  :         return static_cast<int_type>(EOF);
; 490  :     }

	add	rsp, 40					; 00000028H
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 480  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__B71DB0E4_xstring
	call	__CheckForDebuggerJustMyCode
	mov	eax, DWORD PTR [rbx]
	cmp	DWORD PTR [rdi], eax
	mov	rbx, QWORD PTR [rsp+48]
	sete	al

; 481  :         return _Left == _Right;
; 482  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 402  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept /* strengthened */ {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__B71DB0E4_xstring
	call	__CheckForDebuggerJustMyCode
	mov	rax, -1
	npad	4
$LL3@length:

; 403  :         // find length of null-terminated string
; 404  : #if _HAS_CXX17
; 405  : #ifdef __cpp_char8_t
; 406  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 407  : #if _HAS_U8_INTRINSICS
; 408  :             return __builtin_u8strlen(_First);
; 409  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 410  :             return _Primary_char_traits::length(_First);
; 411  : #endif // _HAS_U8_INTRINSICS
; 412  :         } else
; 413  : #endif // __cpp_char8_t
; 414  :         {
; 415  :             return __builtin_strlen(_First);
; 416  :         }
; 417  : #else // _HAS_CXX17
; 418  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

	inc	rax
	cmp	BYTE PTR [rbx+rax], 0
	jne	SHORT $LL3@length

; 419  : #endif // _HAS_CXX17
; 420  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
_Obj$ = 48
<_Args_0>$ = 56
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 224  :     is_nothrow_constructible_v<_Ty, _Types...>) {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx
	lea	rcx, OFFSET FLAT:__A997C6C5_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	rcx, rdi
	mov	rbx, rax
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rcx, rbx
	mov	rdx, QWORD PTR [rax]
	mov	rbx, QWORD PTR [rsp+48]

; 225  : #if _HAS_CXX20
; 226  :     if (_STD is_constant_evaluated()) {
; 227  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 228  :     } else
; 229  : #endif // _HAS_CXX20
; 230  :     {
; 231  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 232  :     }
; 233  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 48
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__5E44C2A9_xstddef
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 281  :     return __builtin_addressof(_Val);
; 282  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT

; 1310 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx
	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1305 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR [rbx], 0

; 1306 :         _Ptr = nullptr;
; 1307 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\utility
;	COMDAT ??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 48
_New_val$ = 56
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>, COMDAT

; 651  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__A95B55BB_utility
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdi]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], rdx

; 652  :     // assign _New_val to _Val, return previous _Val
; 653  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 654  :     _Val         = static_cast<_Other&&>(_New_val);
; 655  :     return _Old_val;
; 656  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT

; 1086 :     void _Orphan_all_locked_v3() noexcept {

$LN5:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	mov	rcx, rbx
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ

; 1087 :         _Lockit _Lock(_LOCK_DEBUG);
; 1088 :         _Orphan_all_unlocked_v3();
; 1089 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 48
this$ = 48
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT

; 1226 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN3@Orphan_all

; 1227 :     if (!_Myproxy) { // no proxy, already done
; 1228 :         return;
; 1229 :     }
; 1230 : 
; 1231 :     // proxy allocated, drain it
; 1232 :     for (auto _Pnext = _STD exchange(_Myproxy->_Myfirstiter, nullptr); _Pnext; _Pnext = _Pnext->_Mynextiter) {

	xor	ebx, ebx
	lea	rdx, QWORD PTR $T1[rsp]
	add	rcx, 8
	mov	QWORD PTR $T1[rsp], rbx
	call	??$exchange@PEAU_Iterator_base12@std@@$$T@std@@YAPEAU_Iterator_base12@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
	test	rax, rax
	je	SHORT $LN3@Orphan_all
	npad	9
$LL4@Orphan_all:

; 1233 :         _Pnext->_Myproxy = nullptr;

	mov	QWORD PTR [rax], rbx
	mov	rax, QWORD PTR [rax+8]
	test	rax, rax
	jne	SHORT $LL4@Orphan_all
$LN3@Orphan_all:

; 1234 :     }
; 1235 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1237 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 1238 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1239 : #if _HAS_CXX20
; 1240 :     if (_STD is_constant_evaluated()) {
; 1241 :         _Orphan_all_unlocked_v3();
; 1242 :     } else
; 1243 : #endif // _HAS_CXX20
; 1244 :     {
; 1245 :         _Orphan_all_locked_v3();
; 1246 :     }
; 1247 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1248 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1055 :     _CONSTEXPR20 _Container_base12() noexcept = default;

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx
	mov	QWORD PTR [rbx], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Mycont_$ = 56
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1047 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	QWORD PTR [rdi], rbx
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+8], 0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 64
_Bytes$ = 72
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 145  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN24:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	add	QWORD PTR [rbx], 47			; 0000002fH
	lea	rbp, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	rax, QWORD PTR [rdi]
	lea	r14, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	rcx, -361700864190383366		; fafafafafafafafaH
	mov	rbx, QWORD PTR [rax-8]
	cmp	QWORD PTR [rax-16], rcx
	je	SHORT $LN6@Adjust_man

; 146  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 147  :     _Bytes += _Non_user_size;
; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];
; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	r8d, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	lea	rdx, OFFSET FLAT:??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rbp
	add	r8d, 9
	mov	QWORD PTR [rsp+32], r14
	lea	ecx, QWORD PTR [r9+2]
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	mov	r9d, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	lea	r8, OFFSET FLAT:??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	add	r9d, 9
	mov	QWORD PTR [rsp+32], 0
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
$LN6@Adjust_man:

; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR [rdi]
	sub	rax, rbx

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -16
	cmp	rax, 31
	jbe	SHORT $LN22@Adjust_man
	mov	r8d, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	lea	rdx, OFFSET FLAT:??_C@_0GC@ONGHGEHM@C?3?2Program?5Files?2Microsoft?5Visu@
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rbp
	add	r8d, 19
	mov	QWORD PTR [rsp+32], r14
	lea	ecx, QWORD PTR [r9+2]
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	mov	r9d, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	lea	r8, OFFSET FLAT:??_C@_1ME@DGNBIMPE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	add	r9d, 19
	mov	QWORD PTR [rsp+32], 0
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
$LN22@Adjust_man:

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);
; 166  : }

	mov	rbp, QWORD PTR [rsp+72]
	mov	QWORD PTR [rdi], rbx
	mov	rbx, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	r14
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 76   :         void* _Allocate(const size_t _Bytes) {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__C3CE3678_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, rbx

; 77   :         return ::operator new(_Bytes);
; 78   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??2@YAPEAX_K@Z				; operator new
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 641  :     _NODISCARD static constexpr long long(max)() noexcept {

$LN5:
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:__B3F344F6_limits
	call	__CheckForDebuggerJustMyCode
	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 642  :         return LLONG_MAX;
; 643  :     }

	add	rsp, 40					; 00000028H
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN4:
	sub	rsp, 72					; 00000048H
	lea	rcx, OFFSET FLAT:__5D994F5F_exception
	call	__CheckForDebuggerJustMyCode
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
	int	3
$LN3@Throw_bad_:
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	call	??1bad_array_new_length@std@@UEAA@XZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	lea	rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
	jmp	??1bad_alloc@std@@UEAA@XZ
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 141  :     {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__1BEF3287_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, rbx
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc
	lea	rax, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx

; 142  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	call	??1bad_alloc@std@@UEAA@XZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
	jmp	??1exception@std@@UEAA@XZ		; std::exception::~exception
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 130  :     {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__1BEF3287_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	r8d, 1
	mov	rdx, rbx
	mov	rcx, rdi
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception
	mov	rbx, QWORD PTR [rsp+48]
	lea	rax, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi

; 131  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 24
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 94   :     {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__1BEF3287_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR [rbx+8]
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	test	rcx, rcx
	cmovne	rax, rcx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";
; 96   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 89   :     {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	lea	rcx, OFFSET FLAT:__1BEF3287_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	lea	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx], rax

; 90   :         __std_exception_destroy(&_Data);
; 91   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	__std_exception_destroy
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 72   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__1BEF3287_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	lea	rdx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi], rax
	vpxor	xmm0, xmm0, xmm0
	lea	rcx, QWORD PTR [rbx+8]
	vmovups	XMMWORD PTR [rdx], xmm0
	call	__std_exception_copy
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);
; 74   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
__formal$ = 64
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 66   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rbx, rdx
	lea	rcx, OFFSET FLAT:__1BEF3287_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	lea	rax, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rdi], rax
	mov	rax, rdi
	mov	QWORD PTR [rdi+16], 0
	mov	QWORD PTR [rdi+8], rbx
	mov	rbx, QWORD PTR [rsp+48]

; 67   :         _Data._What = _Message;
; 68   :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 48
_Where$ = 56
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, OFFSET FLAT:__E81B5085_vcruntime_new@h
	mov	rbx, rdx
	call	__CheckForDebuggerJustMyCode
	mov	rax, rbx

; 169  :         (void)_Size;
; 170  :         return _Where;
; 171  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\paniw\Desktop\Peiravani_dotProduct\Peiravani_dotProduct\Peiravani_dotProduct\dotProduct.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
	lea	rcx, OFFSET FLAT:__6229CAFC_dotProduct@cpp
	jmp	__CheckForDebuggerJustMyCode
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\paniw\Desktop\Peiravani_dotProduct\Peiravani_dotProduct\Peiravani_dotProduct\dotProduct.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
	lea	rcx, OFFSET FLAT:__6229CAFC_dotProduct@cpp
	jmp	__CheckForDebuggerJustMyCode
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
